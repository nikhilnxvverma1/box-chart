webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar platform_browser_dynamic_1 = __webpack_require__(1);\nvar app_module_1 = __webpack_require__(23);\n__webpack_require__(646);\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9tYWluLnRzPzY0YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGxhdGZvcm1Ccm93c2VyRHluYW1pYyB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXItZHluYW1pYyc7XG5cbmltcG9ydCB7IEFwcE1vZHVsZSB9IGZyb20gJy4vYXBwLm1vZHVsZSc7XG5pbXBvcnQgJy4vd29ya3NwYWNlLnNjc3MnO1xuXG5wbGF0Zm9ybUJyb3dzZXJEeW5hbWljKCkuYm9vdHN0cmFwTW9kdWxlKEFwcE1vZHVsZSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9tYWluLnRzIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFFQTtBQUNBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 23:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar platform_browser_1 = __webpack_require__(21);\nvar forms_1 = __webpack_require__(644);\nvar router_1 = __webpack_require__(24);\nvar app_component_1 = __webpack_require__(56);\nvar login_component_1 = __webpack_require__(58);\nvar signup_component_1 = __webpack_require__(60);\nvar document_list_component_1 = __webpack_require__(62);\nvar workspace_component_1 = __webpack_require__(64);\nvar artboard_component_1 = __webpack_require__(70);\nvar sidebar_component_1 = __webpack_require__(67);\nvar area_component_1 = __webpack_require__(75);\nvar box_component_1 = __webpack_require__(77);\nvar line_segment_component_1 = __webpack_require__(648);\nvar resize_handle_component_1 = __webpack_require__(79);\nvar transform_service_1 = __webpack_require__(65);\nvar focus_directive_1 = __webpack_require__(83);\nvar my_rect_directive_1 = __webpack_require__(84);\nvar my_circle_directive_1 = __webpack_require__(645);\nvar MyRoutes = router_1.RouterModule.forRoot([\n    { path: '', component: login_component_1.LoginComponent },\n    { path: 'signup', component: signup_component_1.SignupComponent },\n    { path: 'all-docs', component: document_list_component_1.DocumentListComponent },\n    { path: 'all-docs/document', component: workspace_component_1.WorkspaceComponent },\n]);\nvar AppModule = (function () {\n    function AppModule() {\n    }\n    AppModule = __decorate([\n        core_1.NgModule({\n            imports: [\n                platform_browser_1.BrowserModule,\n                forms_1.FormsModule,\n                MyRoutes\n            ],\n            declarations: [\n                focus_directive_1.FocusDirective,\n                my_rect_directive_1.MyRectDirective,\n                my_circle_directive_1.MyCircleDirective,\n                app_component_1.AppComponent,\n                login_component_1.LoginComponent,\n                signup_component_1.SignupComponent,\n                document_list_component_1.DocumentListComponent,\n                workspace_component_1.WorkspaceComponent,\n                sidebar_component_1.SidebarComponent,\n                artboard_component_1.ArtboardComponent,\n                area_component_1.AreaComponent,\n                box_component_1.BoxComponent,\n                line_segment_component_1.LineSegmentComponent,\n                resize_handle_component_1.ResizeHandleComponent\n            ],\n            schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA],\n            providers: [transform_service_1.TransformService],\n            bootstrap: [app_component_1.AppComponent]\n        }), \n        __metadata('design:paramtypes', [])\n    ], AppModule);\n    return AppModule;\n}());\nexports.AppModule = AppModule;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvYXBwLm1vZHVsZS50cz9kYjE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBDVVNUT01fRUxFTUVOVFNfU0NIRU1BIH0gICAgICBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEFwcENvbXBvbmVudCB9ICBmcm9tICcuL2NvbXBvbmVudC9hcHAuY29tcG9uZW50JztcbmltcG9ydCB7IExvZ2luQ29tcG9uZW50IH0gIGZyb20gJy4vY29tcG9uZW50L2xvZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaWdudXBDb21wb25lbnQgfSAgZnJvbSAnLi9jb21wb25lbnQvc2lnbnVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEb2N1bWVudExpc3RDb21wb25lbnQgfSAgZnJvbSAnLi9jb21wb25lbnQvZG9jdW1lbnQtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgV29ya3NwYWNlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQvd29ya3NwYWNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcnRib2FyZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2FydGJvYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaWRlYmFyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQvc2lkZWJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXJlYUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2FyZWEuY29tcG9uZW50JztcbmltcG9ydCB7IEJveENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2JveC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGluZVNlZ21lbnRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudC9saW5lLXNlZ21lbnQuY29tcG9uZW50JztcbmltcG9ydCB7IFJlc2l6ZUhhbmRsZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L3Jlc2l6ZS1oYW5kbGUuY29tcG9uZW50JztcbmltcG9ydCB7IFRyYW5zZm9ybVNlcnZpY2UgfSBmcm9tICcuL3V0aWxpdHkvdHJhbnNmb3JtLnNlcnZpY2UnO1xuaW1wb3J0IHsgRm9jdXNEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZS9mb2N1cy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTXlSZWN0RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmUvbXktcmVjdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTXlDaXJjbGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZS9teS1jaXJjbGUuZGlyZWN0aXZlJztcblxuY29uc3QgTXlSb3V0ZXM9Um91dGVyTW9kdWxlLmZvclJvb3QoW1xuICAgIHtwYXRoOicnLGNvbXBvbmVudDpMb2dpbkNvbXBvbmVudH0sXG4gICAge3BhdGg6J3NpZ251cCcsY29tcG9uZW50OlNpZ251cENvbXBvbmVudH0sXG4gICAge3BhdGg6J2FsbC1kb2NzJyxjb21wb25lbnQ6RG9jdW1lbnRMaXN0Q29tcG9uZW50fSxcbiAgICB7cGF0aDonYWxsLWRvY3MvZG9jdW1lbnQnLGNvbXBvbmVudDpXb3Jrc3BhY2VDb21wb25lbnR9LFxuXSk7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogICAgICBbIFxuICAgICAgICBCcm93c2VyTW9kdWxlLFxuXHRcdEZvcm1zTW9kdWxlLFxuICAgICAgICBNeVJvdXRlc1xuICAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgRm9jdXNEaXJlY3RpdmUsXG4gICAgICAgICBNeVJlY3REaXJlY3RpdmUsXG4gICAgICAgICBNeUNpcmNsZURpcmVjdGl2ZSxcbiAgICAgICAgIEFwcENvbXBvbmVudCxcbiAgICAgICAgIExvZ2luQ29tcG9uZW50LFxuICAgICAgICAgU2lnbnVwQ29tcG9uZW50LFxuICAgICAgICAgRG9jdW1lbnRMaXN0Q29tcG9uZW50LFxuICAgICAgICAgV29ya3NwYWNlQ29tcG9uZW50LFxuICAgICAgICAgU2lkZWJhckNvbXBvbmVudCxcbiAgICAgICAgIEFydGJvYXJkQ29tcG9uZW50LFxuICAgICAgICAgQXJlYUNvbXBvbmVudCxcbiAgICAgICAgIEJveENvbXBvbmVudCxcbiAgICAgICAgIExpbmVTZWdtZW50Q29tcG9uZW50LFxuICAgICAgICAgUmVzaXplSGFuZGxlQ29tcG9uZW50XG4gICAgICAgICBdLFxuICAgIHNjaGVtYXM6IFsgQ1VTVE9NX0VMRU1FTlRTX1NDSEVNQSBdLFxuICAgIHByb3ZpZGVyczpbVHJhbnNmb3JtU2VydmljZV0sXG4gICAgYm9vdHN0cmFwOiAgICBbIEFwcENvbXBvbmVudCBdXG59KVxuZXhwb3J0IGNsYXNzIEFwcE1vZHVsZSB7IH1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vY2xpZW50L2FwcC5tb2R1bGUudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTRCQTtBQUFBO0FBQUE7QUExQkE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUFBO0FBQ0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 56:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar AppComponent = (function () {\n    function AppComponent() {\n        this.name = 'Angular 2.4';\n    }\n    AppComponent = __decorate([\n        core_1.Component({\n            selector: 'my-app',\n            template: __webpack_require__(57),\n        }), \n        __metadata('design:paramtypes', [])\n    ], AppComponent);\n    return AppComponent;\n}());\nexports.AppComponent = AppComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L2FwcC5jb21wb25lbnQudHM/ZjYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgdGVtcGxhdGU6IHJlcXVpcmUoJy4uL3ZpZXcvYXBwLmNvbXBvbmVudC5odG1sJyksXG59KVxuZXhwb3J0IGNsYXNzIEFwcENvbXBvbmVudCAgeyBcbiAgbmFtZSA9ICdBbmd1bGFyIDIuNCc7ICAgXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9jb21wb25lbnQvYXBwLmNvbXBvbmVudC50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBTUE7QUFBQTtBQUNBO0FBQ0E7QUFOQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUFBO0FBR0E7QUFBQTtBQUZBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 57:
/***/ function(module, exports) {

	eval("module.exports = \"<router-outlet></router-outlet>\\n\\n\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9hcHAuY29tcG9uZW50Lmh0bWw/OTlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHJvdXRlci1vdXRsZXQ+PC9yb3V0ZXItb3V0bGV0PlxcblxcblwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3ZpZXcvYXBwLmNvbXBvbmVudC5odG1sXG4vLyBtb2R1bGUgaWQgPSA1N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 58:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar LoginComponent = (function () {\n    function LoginComponent() {\n    }\n    LoginComponent = __decorate([\n        core_1.Component({\n            selector: 'login',\n            template: __webpack_require__(59),\n        }), \n        __metadata('design:paramtypes', [])\n    ], LoginComponent);\n    return LoginComponent;\n}());\nexports.LoginComponent = LoginComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L2xvZ2luLmNvbXBvbmVudC50cz9hOTgzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsb2dpbicsXG4gIHRlbXBsYXRlOiByZXF1aXJlKCcuLi92aWV3L2xvZ2luLmNvbXBvbmVudC5odG1sJyksXG59KVxuZXhwb3J0IGNsYXNzIExvZ2luQ29tcG9uZW50ICB7XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vY2xpZW50L2NvbXBvbmVudC9sb2dpbi5jb21wb25lbnQudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQU1BO0FBQUE7QUFFQTtBQU5BO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQUE7QUFHQTtBQUFBO0FBRkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 59:
/***/ function(module, exports) {

	eval("module.exports = \"<a href='\\\\signup'>Signup now </a>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9sb2dpbi5jb21wb25lbnQuaHRtbD8wMTM1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8YSBocmVmPSdcXFxcc2lnbnVwJz5TaWdudXAgbm93IDwvYT5cIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC92aWV3L2xvZ2luLmNvbXBvbmVudC5odG1sXG4vLyBtb2R1bGUgaWQgPSA1OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 60:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar SignupComponent = (function () {\n    function SignupComponent() {\n    }\n    SignupComponent = __decorate([\n        core_1.Component({\n            selector: 'signup',\n            template: __webpack_require__(61),\n        }), \n        __metadata('design:paramtypes', [])\n    ], SignupComponent);\n    return SignupComponent;\n}());\nexports.SignupComponent = SignupComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L3NpZ251cC5jb21wb25lbnQudHM/ZTg0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2lnbnVwJyxcbiAgdGVtcGxhdGU6IHJlcXVpcmUoJy4uL3ZpZXcvc2lnbnVwLmNvbXBvbmVudC5odG1sJyksXG59KVxuZXhwb3J0IGNsYXNzIFNpZ251cENvbXBvbmVudCAge1xuXHRcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9jb21wb25lbnQvc2lnbnVwLmNvbXBvbmVudC50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBTUE7QUFBQTtBQUVBO0FBTkE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFBQTtBQUdBO0FBQUE7QUFGQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 61:
/***/ function(module, exports) {

	eval("module.exports = \"<h1>TODO signup</h1>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9zaWdudXAuY29tcG9uZW50Lmh0bWw/MjBiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPGgxPlRPRE8gc2lnbnVwPC9oMT5cIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC92aWV3L3NpZ251cC5jb21wb25lbnQuaHRtbFxuLy8gbW9kdWxlIGlkID0gNjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 62:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar DocumentListComponent = (function () {\n    function DocumentListComponent() {\n    }\n    DocumentListComponent = __decorate([\n        core_1.Component({\n            selector: 'document-list',\n            template: __webpack_require__(63),\n        }), \n        __metadata('design:paramtypes', [])\n    ], DocumentListComponent);\n    return DocumentListComponent;\n}());\nexports.DocumentListComponent = DocumentListComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L2RvY3VtZW50LWxpc3QuY29tcG9uZW50LnRzP2VkNDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RvY3VtZW50LWxpc3QnLFxuICB0ZW1wbGF0ZTogcmVxdWlyZSgnLi4vdmlldy9kb2N1bWVudC1saXN0LmNvbXBvbmVudC5odG1sJyksXG59KVxuZXhwb3J0IGNsYXNzIERvY3VtZW50TGlzdENvbXBvbmVudCAge1xuXHRcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9jb21wb25lbnQvZG9jdW1lbnQtbGlzdC5jb21wb25lbnQudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQU1BO0FBQUE7QUFFQTtBQU5BO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQUE7QUFHQTtBQUFBO0FBRkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 63:
/***/ function(module, exports) {

	eval("module.exports = \"<h1>TODO document list</h1>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9kb2N1bWVudC1saXN0LmNvbXBvbmVudC5odG1sPzkxNmUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxoMT5UT0RPIGRvY3VtZW50IGxpc3Q8L2gxPlwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3ZpZXcvZG9jdW1lbnQtbGlzdC5jb21wb25lbnQuaHRtbFxuLy8gbW9kdWxlIGlkID0gNjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 64:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar core_2 = __webpack_require__(3);\nvar transform_service_1 = __webpack_require__(65);\nvar geometry_1 = __webpack_require__(66);\nvar sidebar_component_1 = __webpack_require__(67);\nvar artboard_component_1 = __webpack_require__(70);\nvar SpaceKey = 32;\nvar WorkspaceComponent = (function () {\n    function WorkspaceComponent(transformService) {\n        this.transformService = transformService;\n        this.windowMovementAllowed = false; //allowed only when space is held\n        this.dragEntered = false;\n        this.startX = 0;\n        this.startY = 0;\n        this.lastX = 0;\n        this.lastY = 0;\n    }\n    WorkspaceComponent.prototype.ngOnInit = function () {\n        //'window' here refers to the window object\n        //get the width and height of the 'device' window and get the \n        this.movingWindow = new geometry_1.Rect(this.artboard.massiveArea.width / 2 - window.innerWidth / 2, this.artboard.massiveArea.height / 2 - window.innerHeight / 2, window.innerWidth, window.outerHeight);\n        this.positionArtboardBasis(this.movingWindow);\n    };\n    WorkspaceComponent.prototype.toggleSidebar = function () {\n        this.sidebar.open = !this.sidebar.open;\n    };\n    WorkspaceComponent.prototype.positionArtboardBasis = function (frame) {\n        this.artboard.massiveArea.x = -frame.x;\n        this.artboard.massiveArea.y = -frame.y;\n        this.movingWindow.x = frame.x;\n        this.movingWindow.y = frame.y;\n    };\n    WorkspaceComponent.prototype.keydown = function (event) {\n        if (event.keyCode == SpaceKey) {\n            this.windowMovementAllowed = true;\n        }\n    };\n    WorkspaceComponent.prototype.keyup = function (event) {\n        if (event.keyCode == SpaceKey) {\n            this.windowMovementAllowed = false;\n        }\n    };\n    WorkspaceComponent.prototype.mousedown = function (event) {\n        this.dragEntered = true;\n        this.startX = event.clientX;\n        this.startY = event.clientY;\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n    };\n    WorkspaceComponent.prototype.mousemove = function (event) {\n        var dx = event.clientX - this.lastX;\n        var dy = event.clientY - this.lastY;\n        if (this.dragEntered && this.windowMovementAllowed) {\n            //we inverse the differences because the gesture 'grabs' and pulls the artboard in the other direction\n            dx *= -1;\n            dy *= -1;\n            if (this.movingWindow.x + dx >= this.artboard.massiveArea.x &&\n                this.movingWindow.x + dx <= this.artboard.massiveArea.x + this.artboard.massiveArea.width) {\n                this.movingWindow.x += dx;\n            }\n            if (this.movingWindow.y + dy >= this.artboard.massiveArea.y &&\n                this.movingWindow.y + dy <= this.artboard.massiveArea.y + this.artboard.massiveArea.height) {\n                this.movingWindow.y += dy;\n            }\n            this.positionArtboardBasis(this.movingWindow);\n        }\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n    };\n    WorkspaceComponent.prototype.mouseup = function (event) {\n        this.dragEntered = false;\n    };\n    WorkspaceComponent.prototype.resize = function (event) {\n        console.log(\"Window resize changing moving window size\");\n        this.movingWindow.width = window.innerWidth; //TODO what if the scale is different?\n        this.movingWindow.height = window.innerHeight;\n    };\n    __decorate([\n        core_1.ViewChild(sidebar_component_1.SidebarComponent), \n        __metadata('design:type', (typeof (_a = typeof sidebar_component_1.SidebarComponent !== 'undefined' && sidebar_component_1.SidebarComponent) === 'function' && _a) || Object)\n    ], WorkspaceComponent.prototype, \"sidebar\", void 0);\n    __decorate([\n        core_1.ViewChild(artboard_component_1.ArtboardComponent), \n        __metadata('design:type', (typeof (_b = typeof artboard_component_1.ArtboardComponent !== 'undefined' && artboard_component_1.ArtboardComponent) === 'function' && _b) || Object)\n    ], WorkspaceComponent.prototype, \"artboard\", void 0);\n    WorkspaceComponent = __decorate([\n        core_1.Component({\n            selector: 'workspace',\n            styles: [__webpack_require__(73)],\n            template: __webpack_require__(74),\n            animations: [\n                core_2.trigger('shiftMenuControls', [\n                    core_2.state('unshifted', core_2.style({\n                        left: '20px'\n                    })),\n                    core_2.state('shifted', core_2.style({\n                        left: '300px'\n                    })),\n                    core_2.transition('unshifted => shifted', core_2.animate('100ms ease-in')),\n                    core_2.transition('shifted => unshifted', core_2.animate('100ms ease-out'))\n                ])\n            ]\n        }), \n        __metadata('design:paramtypes', [(typeof (_c = typeof transform_service_1.TransformService !== 'undefined' && transform_service_1.TransformService) === 'function' && _c) || Object])\n    ], WorkspaceComponent);\n    return WorkspaceComponent;\n    var _a, _b, _c;\n}());\nexports.WorkspaceComponent = WorkspaceComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L3dvcmtzcGFjZS5jb21wb25lbnQudHM/YWNjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsVmlld0NoaWxkLE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYW5pbWF0ZSxzdHlsZSx0cmlnZ2VyLHRyYW5zaXRpb24sc3RhdGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRyYW5zZm9ybVNlcnZpY2UgfSBmcm9tICcuLi91dGlsaXR5L3RyYW5zZm9ybS5zZXJ2aWNlJztcbmltcG9ydCB7IFBvaW50LFJlY3QgfSBmcm9tICcuLi9tb2RlbC9nZW9tZXRyeSc7XG5pbXBvcnQgeyBTaWRlYmFyQ29tcG9uZW50IH0gZnJvbSAnLi9zaWRlYmFyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcnRib2FyZENvbXBvbmVudCB9IGZyb20gJy4vYXJ0Ym9hcmQuY29tcG9uZW50JztcblxuY29uc3QgU3BhY2VLZXk9MzI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnd29ya3NwYWNlJyxcbiAgICBzdHlsZXM6W3JlcXVpcmUoJy4uL3N0eWxlL3dvcmtzcGFjZS5jb21wb25lbnQuc2NzcycpXSxcbiAgICB0ZW1wbGF0ZTogcmVxdWlyZSgnLi4vdmlldy93b3Jrc3BhY2UuY29tcG9uZW50Lmh0bWwnKSxcbiAgICBhbmltYXRpb25zOltcbiAgICAgICAgdHJpZ2dlcignc2hpZnRNZW51Q29udHJvbHMnLFtcbiAgICAgICAgICAgIHN0YXRlKCd1bnNoaWZ0ZWQnLHN0eWxlKHtcbiAgICAgICAgICAgICAgICBsZWZ0OicyMHB4J1xuICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgc3RhdGUoJ3NoaWZ0ZWQnLHN0eWxlKHtcbiAgICAgICAgICAgICAgICBsZWZ0OiczMDBweCdcbiAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgIHRyYW5zaXRpb24oJ3Vuc2hpZnRlZCA9PiBzaGlmdGVkJywgYW5pbWF0ZSgnMTAwbXMgZWFzZS1pbicpKSxcbiAgICAgICAgICAgIHRyYW5zaXRpb24oJ3NoaWZ0ZWQgPT4gdW5zaGlmdGVkJywgYW5pbWF0ZSgnMTAwbXMgZWFzZS1vdXQnKSlcbiAgICAgICAgXSlcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFdvcmtzcGFjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdHtcblxuICAgIC8vbW92aW5nIHdpbmRvdyBpcyBhIHZpcnR1YWwgcmVjdCB0aGF0IG1vdmVzIGFjcm9zcyB0aGUgbWFzc2l2ZSBhcmVhIG9mIHRoZSBhcnRib2FyZFxuICAgIHByaXZhdGUgbW92aW5nV2luZG93OlJlY3Q7XG4gICAgcHJpdmF0ZSB3aW5kb3dNb3ZlbWVudEFsbG93ZWQ9ZmFsc2U7Ly9hbGxvd2VkIG9ubHkgd2hlbiBzcGFjZSBpcyBoZWxkXG4gICAgcHJpdmF0ZSBkcmFnRW50ZXJlZD1mYWxzZTtcbiAgICBwcml2YXRlIHN0YXJ0WD0wO1xuICAgIHByaXZhdGUgc3RhcnRZPTA7XG4gICAgcHJpdmF0ZSBsYXN0WD0wO1xuICAgIHByaXZhdGUgbGFzdFk9MDtcblxuICAgIEBWaWV3Q2hpbGQoU2lkZWJhckNvbXBvbmVudClcbiAgICBwcml2YXRlIHNpZGViYXI6U2lkZWJhckNvbXBvbmVudDtcblxuICAgIEBWaWV3Q2hpbGQoQXJ0Ym9hcmRDb21wb25lbnQpXG4gICAgcHJpdmF0ZSBhcnRib2FyZDpBcnRib2FyZENvbXBvbmVudDsgICAgXG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zZm9ybVNlcnZpY2U6VHJhbnNmb3JtU2VydmljZSl7fVxuXG4gICAgbmdPbkluaXQoKXtcbiAgICAgICAgLy8nd2luZG93JyBoZXJlIHJlZmVycyB0byB0aGUgd2luZG93IG9iamVjdFxuXG4gICAgICAgIC8vZ2V0IHRoZSB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSAnZGV2aWNlJyB3aW5kb3cgYW5kIGdldCB0aGUgXG4gICAgICAgIHRoaXMubW92aW5nV2luZG93PW5ldyBSZWN0KFxuICAgICAgICAgIHRoaXMuYXJ0Ym9hcmQubWFzc2l2ZUFyZWEud2lkdGgvMi13aW5kb3cuaW5uZXJXaWR0aC8yLFxuICAgICAgICAgIHRoaXMuYXJ0Ym9hcmQubWFzc2l2ZUFyZWEuaGVpZ2h0LzItd2luZG93LmlubmVySGVpZ2h0LzIsXG4gICAgICAgICAgd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgICAgd2luZG93Lm91dGVySGVpZ2h0KTtcbiAgICAgICAgdGhpcy5wb3NpdGlvbkFydGJvYXJkQmFzaXModGhpcy5tb3ZpbmdXaW5kb3cpO1xuICAgIH1cblxuICAgIHRvZ2dsZVNpZGViYXIoKXtcbiAgICAgICAgdGhpcy5zaWRlYmFyLm9wZW49IXRoaXMuc2lkZWJhci5vcGVuO1xuICAgIH1cblxuICAgIHBvc2l0aW9uQXJ0Ym9hcmRCYXNpcyhmcmFtZTpSZWN0KXtcbiAgICAgICAgdGhpcy5hcnRib2FyZC5tYXNzaXZlQXJlYS54PS1mcmFtZS54O1xuICAgICAgICB0aGlzLmFydGJvYXJkLm1hc3NpdmVBcmVhLnk9LWZyYW1lLnk7XG4gICAgICAgIHRoaXMubW92aW5nV2luZG93Lng9ZnJhbWUueDtcbiAgICAgICAgdGhpcy5tb3ZpbmdXaW5kb3cueT1mcmFtZS55O1xuICAgIH1cblxuICAgIGtleWRvd24oZXZlbnQ6S2V5Ym9hcmRFdmVudCl7XG4gICAgICAgIGlmKGV2ZW50LmtleUNvZGU9PVNwYWNlS2V5KXtcbiAgICAgICAgICAgIHRoaXMud2luZG93TW92ZW1lbnRBbGxvd2VkPXRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBrZXl1cChldmVudDpLZXlib2FyZEV2ZW50KXtcbiAgICAgICAgaWYoZXZlbnQua2V5Q29kZT09U3BhY2VLZXkpe1xuICAgICAgICAgICAgdGhpcy53aW5kb3dNb3ZlbWVudEFsbG93ZWQ9ZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBtb3VzZWRvd24oZXZlbnQ6TW91c2VFdmVudCl7XG4gICAgICAgIHRoaXMuZHJhZ0VudGVyZWQ9dHJ1ZTtcbiAgICAgICAgdGhpcy5zdGFydFg9ZXZlbnQuY2xpZW50WDtcbiAgICAgICAgdGhpcy5zdGFydFk9ZXZlbnQuY2xpZW50WTtcbiAgICAgICAgdGhpcy5sYXN0WD1ldmVudC5jbGllbnRYO1xuICAgICAgICB0aGlzLmxhc3RZPWV2ZW50LmNsaWVudFk7XG4gICAgfVxuXG4gICAgbW91c2Vtb3ZlKGV2ZW50Ok1vdXNlRXZlbnQpe1xuICAgICAgICB2YXIgZHg9ZXZlbnQuY2xpZW50WC10aGlzLmxhc3RYO1xuICAgICAgICB2YXIgZHk9ZXZlbnQuY2xpZW50WS10aGlzLmxhc3RZO1xuICAgICAgICBpZih0aGlzLmRyYWdFbnRlcmVkICYmIHRoaXMud2luZG93TW92ZW1lbnRBbGxvd2VkKXtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy93ZSBpbnZlcnNlIHRoZSBkaWZmZXJlbmNlcyBiZWNhdXNlIHRoZSBnZXN0dXJlICdncmFicycgYW5kIHB1bGxzIHRoZSBhcnRib2FyZCBpbiB0aGUgb3RoZXIgZGlyZWN0aW9uXG4gICAgICAgICAgICBkeCo9LTE7XG4gICAgICAgICAgICBkeSo9LTE7XG5cbiAgICAgICAgICAgIGlmKHRoaXMubW92aW5nV2luZG93LngrZHggPj0gdGhpcy5hcnRib2FyZC5tYXNzaXZlQXJlYS54ICYmIFxuICAgICAgICAgICAgICAgIHRoaXMubW92aW5nV2luZG93LngrZHggPD0gdGhpcy5hcnRib2FyZC5tYXNzaXZlQXJlYS54K3RoaXMuYXJ0Ym9hcmQubWFzc2l2ZUFyZWEud2lkdGgpe1xuICAgICAgICAgICAgICAgIHRoaXMubW92aW5nV2luZG93LngrPWR4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZih0aGlzLm1vdmluZ1dpbmRvdy55K2R5ID49IHRoaXMuYXJ0Ym9hcmQubWFzc2l2ZUFyZWEueSAmJiBcbiAgICAgICAgICAgICAgICB0aGlzLm1vdmluZ1dpbmRvdy55K2R5IDw9IHRoaXMuYXJ0Ym9hcmQubWFzc2l2ZUFyZWEueSt0aGlzLmFydGJvYXJkLm1hc3NpdmVBcmVhLmhlaWdodCl7XG4gICAgICAgICAgICAgICAgdGhpcy5tb3ZpbmdXaW5kb3cueSs9ZHk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uQXJ0Ym9hcmRCYXNpcyh0aGlzLm1vdmluZ1dpbmRvdyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sYXN0WD1ldmVudC5jbGllbnRYO1xuICAgICAgICB0aGlzLmxhc3RZPWV2ZW50LmNsaWVudFk7XG4gICAgfVxuXG4gICAgbW91c2V1cChldmVudDpNb3VzZUV2ZW50KXtcbiAgICAgICAgdGhpcy5kcmFnRW50ZXJlZD1mYWxzZTtcbiAgICB9XG5cbiAgICByZXNpemUoZXZlbnQ6RXZlbnQpe1xuICAgICAgICBjb25zb2xlLmxvZyhcIldpbmRvdyByZXNpemUgY2hhbmdpbmcgbW92aW5nIHdpbmRvdyBzaXplXCIpO1xuICAgICAgICB0aGlzLm1vdmluZ1dpbmRvdy53aWR0aD13aW5kb3cuaW5uZXJXaWR0aDsvL1RPRE8gd2hhdCBpZiB0aGUgc2NhbGUgaXMgZGlmZmVyZW50P1xuICAgICAgICB0aGlzLm1vdmluZ1dpbmRvdy5oZWlnaHQ9d2luZG93LmlubmVySGVpZ2h0O1xuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9jb21wb25lbnQvd29ya3NwYWNlLmNvbXBvbmVudC50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBbUJBO0FBaUJBO0FBQUE7QUFiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBS0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQW5GQTtBQUFBOztBQUFBO0FBR0E7QUFBQTs7QUFBQTtBQS9CQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQUE7QUFnR0E7O0FBQUE7QUEvRkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 65:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar TransformService = (function () {\n    function TransformService() {\n    }\n    TransformService.prototype.toModelSpace = function (p) {\n        return new geometry_1.Point(p.x, p.y); //TODO\n    };\n    TransformService.prototype.lengthInModelSpace = function (l) {\n        return l; //TODO\n    };\n    TransformService.prototype.toViewSpace = function (p) {\n        return new geometry_1.Point(p.x, p.y); //TODO\n    };\n    TransformService.prototype.lengthInViewSpace = function (l) {\n        return l; //TODO\n    };\n    TransformService = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [])\n    ], TransformService);\n    return TransformService;\n}());\nexports.TransformService = TransformService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdXRpbGl0eS90cmFuc2Zvcm0uc2VydmljZS50cz84ZTliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi4vbW9kZWwvZ2VvbWV0cnknO1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRyYW5zZm9ybVNlcnZpY2V7XG5cblx0dG9Nb2RlbFNwYWNlKHA6UG9pbnQpOlBvaW50e1xuXHRcdHJldHVybiBuZXcgUG9pbnQocC54LHAueSk7Ly9UT0RPXG5cdH1cblxuXHRsZW5ndGhJbk1vZGVsU3BhY2UobDpudW1iZXIpOm51bWJlcntcblx0XHRyZXR1cm4gbDsvL1RPRE9cblx0fVxuXG5cdHRvVmlld1NwYWNlKHA6UG9pbnQpOlBvaW50e1xuXHRcdHJldHVybiBuZXcgUG9pbnQocC54LHAueSk7Ly9UT0RPXG5cdH1cblxuXHRsZW5ndGhJblZpZXdTcGFjZShsOm51bWJlcik6bnVtYmVye1xuXHRcdHJldHVybiBsOy8vVE9ET1xuXHR9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC91dGlsaXR5L3RyYW5zZm9ybS5zZXJ2aWNlLnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFpQkE7QUFmQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFqQkE7QUFBQTs7QUFBQTtBQWtCQTtBQUFBO0FBakJBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 66:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar common_1 = __webpack_require__(80);\nvar Point = (function () {\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    Point.prototype.toString = function () {\n        return \"P(\" + this.x + \",\" + this.y + \")\";\n    };\n    /** Finds the distance from another point */\n    Point.prototype.distance = function (p) {\n        return Math.sqrt((this.x - p.x) * (this.x - p.x) + (this.y - p.y) * (this.y - p.y));\n    };\n    /** Finds the angle that gets made b/w the x axis and line segment comprised of this point and another point */\n    Point.prototype.angleOfSegment = function (to) {\n        var inDegrees = 0;\n        if (to.x - this.x == 0) {\n            inDegrees = 90;\n            if (to.y < this.y) {\n                inDegrees += 180;\n            }\n        }\n        else {\n            var slope = (to.y - this.y) / (to.x - this.x);\n            inDegrees = Math.atan(slope) * common_1.RadiansToDegrees;\n            //angle is between +90 and -90\n            if (to.y > this.y) {\n                if (to.x > this.x) {\n                }\n                else {\n                    inDegrees += 180;\n                }\n            }\n            else {\n                if (to.x < this.x) {\n                    inDegrees += 180;\n                }\n                else {\n                    inDegrees += 360;\n                }\n            }\n        }\n        return inDegrees;\n    };\n    /** Finds the point situated at some distance in a given direction(angle) */\n    Point.prototype.pointAtLength = function (angleInDegrees, length) {\n        return new Point(this.x + length * Math.cos(common_1.DegreesToRadians * angleInDegrees), this.y + length * Math.sin(common_1.DegreesToRadians * angleInDegrees));\n    };\n    return Point;\n}());\nexports.Point = Point;\nvar LinkedPoint = (function (_super) {\n    __extends(LinkedPoint, _super);\n    function LinkedPoint() {\n        _super.apply(this, arguments);\n    }\n    LinkedPoint.prototype.toString = function () {\n        var prevString = this.previous == null ? \"NULL\" : \"<-\";\n        var nextString = this.next == null ? \"NULL\" : \"->\";\n        return \"<-\" + _super.prototype.toString.call(this) + \"->\";\n    };\n    return LinkedPoint;\n}(Point));\nexports.LinkedPoint = LinkedPoint;\nvar Rect = (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Rect.prototype.toString = function () {\n        return \"R(\" + this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height + \")\";\n    };\n    Rect.prototype.contains = function (p) {\n        return p.x >= this.x && p.x <= (this.x + this.width) &&\n            p.y >= this.y && p.y <= (this.y + this.height);\n    };\n    return Rect;\n}());\nexports.Rect = Rect;\nvar Circle = (function () {\n    function Circle(x, y, radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n    Circle.prototype.toString = function () {\n        return \"C(\" + this.x + \",\" + this.y + \",\" + this.radius + \")\";\n    };\n    Circle.prototype.contains = function (p) {\n        return new Point(this.x, this.y).distance(p) <= this.radius;\n    };\n    return Circle;\n}());\nexports.Circle = Circle;\nvar LineSegment = (function () {\n    function LineSegment(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    LineSegment.prototype.toString = function () {\n        return \"LS: \" + this.start + \",\" + this.end + \")\";\n    };\n    return LineSegment;\n}());\nexports.LineSegment = LineSegment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvbW9kZWwvZ2VvbWV0cnkudHM/NTc2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSYWRpYW5zVG9EZWdyZWVzLERlZ3JlZXNUb1JhZGlhbnMgfSBmcm9tICcuLi91dGlsaXR5L2NvbW1vbic7XG5cbmV4cG9ydCBjbGFzcyBQb2ludHtcblx0eDpudW1iZXI7XG5cdHk6bnVtYmVyO1xuXG5cdGNvbnN0cnVjdG9yKHg6bnVtYmVyLHk6bnVtYmVyKXtcblx0XHR0aGlzLng9eDtcblx0XHR0aGlzLnk9eTtcblx0fVxuXG5cdHRvU3RyaW5nKCk6c3RyaW5ne1xuXHRcdHJldHVybiBcIlAoXCIrdGhpcy54K1wiLFwiK3RoaXMueStcIilcIjtcblx0fVxuXG5cdC8qKiBGaW5kcyB0aGUgZGlzdGFuY2UgZnJvbSBhbm90aGVyIHBvaW50ICovXG5cdGRpc3RhbmNlKHA6UG9pbnQpOm51bWJlcntcblx0XHRyZXR1cm4gTWF0aC5zcXJ0KCh0aGlzLngtcC54KSAqICh0aGlzLngtcC54KSArICh0aGlzLnktcC55KSAqICh0aGlzLnktcC55KSkgO1xuXHR9XG5cblx0LyoqIEZpbmRzIHRoZSBhbmdsZSB0aGF0IGdldHMgbWFkZSBiL3cgdGhlIHggYXhpcyBhbmQgbGluZSBzZWdtZW50IGNvbXByaXNlZCBvZiB0aGlzIHBvaW50IGFuZCBhbm90aGVyIHBvaW50ICovXG5cdGFuZ2xlT2ZTZWdtZW50KHRvOlBvaW50KTpudW1iZXJ7XG5cdFx0dmFyIGluRGVncmVlcz0wO1xuXHRcdGlmICh0by54IC0gdGhpcy54ID09IDApIHtcblx0XHRcdGluRGVncmVlcyA9IDkwO1xuXHRcdFx0aWYodG8ueTx0aGlzLnkpe1xuXHRcdFx0XHRpbkRlZ3JlZXMrPTE4MDtcblx0XHRcdH1cblx0XHR9ZWxzZXtcblx0XHRcdHZhciBzbG9wZT0odG8ueS10aGlzLnkpLyh0by54LXRoaXMueCk7XG5cdFx0XHRpbkRlZ3JlZXM9TWF0aC5hdGFuKHNsb3BlKSpSYWRpYW5zVG9EZWdyZWVzO1xuXHRcdFx0Ly9hbmdsZSBpcyBiZXR3ZWVuICs5MCBhbmQgLTkwXG5cdFx0XHRpZih0by55PnRoaXMueSl7XG5cdFx0XHRcdGlmKHRvLng+dGhpcy54KXsvL2ZpcnN0IHF1YWRyYW50XG5cdFx0XHRcdFx0Ly9kbyBub3RoaW5nXG5cdFx0XHRcdH1lbHNley8vc2Vjb25kIHF1YWRyYW50XG5cdFx0XHRcdFx0aW5EZWdyZWVzKz0xODA7XG5cdFx0XHRcdH1cblx0XHRcdH1lbHNle1xuXHRcdFx0XHRpZih0by54PHRoaXMueCl7Ly90aGlyZCBxdWFkcmFudFxuXHRcdFx0XHRcdGluRGVncmVlcys9MTgwO1xuXHRcdFx0XHR9ZWxzZXsvL2ZvdXJ0aCBxdWFkcmFudFxuXHRcdFx0XHRcdGluRGVncmVlcys9MzYwO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBpbkRlZ3JlZXM7XG5cdH1cblxuXHQvKiogRmluZHMgdGhlIHBvaW50IHNpdHVhdGVkIGF0IHNvbWUgZGlzdGFuY2UgaW4gYSBnaXZlbiBkaXJlY3Rpb24oYW5nbGUpICovXG5cdHBvaW50QXRMZW5ndGgoYW5nbGVJbkRlZ3JlZXM6bnVtYmVyLCBsZW5ndGg6bnVtYmVyKTpQb2ludHtcblx0XHRyZXR1cm4gbmV3IFBvaW50KFxuXHRcdFx0dGhpcy54K2xlbmd0aCpNYXRoLmNvcyhEZWdyZWVzVG9SYWRpYW5zICogYW5nbGVJbkRlZ3JlZXMpLFxuXHRcdFx0dGhpcy55K2xlbmd0aCpNYXRoLnNpbihEZWdyZWVzVG9SYWRpYW5zICogYW5nbGVJbkRlZ3JlZXMpKTtcblxuXHR9XG5cbn1cblxuZXhwb3J0IGNsYXNzIExpbmtlZFBvaW50IGV4dGVuZHMgUG9pbnR7XG5cdG5leHQ6TGlua2VkUG9pbnQ7XG5cdHByZXZpb3VzOkxpbmtlZFBvaW50O1xuXG5cdHRvU3RyaW5nKCk6c3RyaW5ne1xuXHRcdHZhciBwcmV2U3RyaW5nPXRoaXMucHJldmlvdXM9PW51bGw/XCJOVUxMXCI6XCI8LVwiO1xuXHRcdHZhciBuZXh0U3RyaW5nPXRoaXMubmV4dD09bnVsbD9cIk5VTExcIjpcIi0+XCI7XG5cdFx0cmV0dXJuIFwiPC1cIitzdXBlci50b1N0cmluZygpK1wiLT5cIjtcblx0fVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdlb21ldHJ5e1xuXHRjb250YWlucyhwOlBvaW50KTpib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgUmVjdCBpbXBsZW1lbnRzIEdlb21ldHJ5e1xuXHR4Om51bWJlcjtcblx0eTpudW1iZXI7XG5cdHdpZHRoOm51bWJlcjtcblx0aGVpZ2h0Om51bWJlcjtcblxuXHRjb25zdHJ1Y3Rvcih4Om51bWJlcix5Om51bWJlcix3aWR0aDpudW1iZXIsaGVpZ2h0Om51bWJlcil7XG5cdFx0dGhpcy54PXg7XG5cdFx0dGhpcy55PXk7XG5cdFx0dGhpcy53aWR0aD13aWR0aDtcblx0XHR0aGlzLmhlaWdodD1oZWlnaHQ7XG5cblx0fVxuXG5cdHRvU3RyaW5nKCk6c3RyaW5ne1xuXHRcdHJldHVybiBcIlIoXCIrdGhpcy54K1wiLFwiK3RoaXMueStcIixcIit0aGlzLndpZHRoK1wiLFwiK3RoaXMuaGVpZ2h0K1wiKVwiO1xuXHR9XG5cblx0Y29udGFpbnMocDpQb2ludCk6Ym9vbGVhbntcblx0XHRyZXR1cm4gcC54Pj10aGlzLnggJiYgcC54PD0odGhpcy54ICsgdGhpcy53aWR0aCkgJiZcblx0XHRcdFx0cC55Pj10aGlzLnkgJiYgcC55PD0odGhpcy55ICsgdGhpcy5oZWlnaHQpO1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBDaXJjbGUgaW1wbGVtZW50cyBHZW9tZXRyeXtcblx0eDpudW1iZXI7XG5cdHk6bnVtYmVyO1xuXHRyYWRpdXM6bnVtYmVyO1xuXG5cdGNvbnN0cnVjdG9yKHg6bnVtYmVyLHk6bnVtYmVyLHJhZGl1czpudW1iZXIpe1xuXHRcdHRoaXMueD14O1xuXHRcdHRoaXMueT15O1xuXHRcdHRoaXMucmFkaXVzPXJhZGl1cztcblx0fVxuXG5cdHRvU3RyaW5nKCk6c3RyaW5ne1xuXHRcdHJldHVybiBcIkMoXCIrdGhpcy54K1wiLFwiK3RoaXMueStcIixcIit0aGlzLnJhZGl1cytcIilcIjtcblx0fVxuXG5cdGNvbnRhaW5zKHA6UG9pbnQpOmJvb2xlYW57XG5cdFx0cmV0dXJuIG5ldyBQb2ludCh0aGlzLngsdGhpcy55KS5kaXN0YW5jZShwKSA8PSB0aGlzLnJhZGl1cztcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgTGluZVNlZ21lbnR7XG5cdHN0YXJ0OlBvaW50O1xuXHRlbmQ6UG9pbnQ7XG5cblx0Y29uc3RydWN0b3Ioc3RhcnQ6UG9pbnQsZW5kOlBvaW50KXtcblx0XHR0aGlzLnN0YXJ0PXN0YXJ0O1xuXHRcdHRoaXMuZW5kPWVuZDtcblx0fVxuXG5cdHRvU3RyaW5nKCk6c3RyaW5ne1x0XHRcblx0XHRyZXR1cm4gXCJMUzogXCIrdGhpcy5zdGFydCtcIixcIit0aGlzLmVuZCtcIilcIjtcblx0fVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vY2xpZW50L21vZGVsL2dlb21ldHJ5LnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUFBO0FBdkRBO0FBeURBO0FBQUE7QUFBQTtBQUFBO0FBU0E7QUFMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVRBO0FBZUE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF0QkE7QUF3QkE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQWxCQTtBQW9CQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVpBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 67:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar core_2 = __webpack_require__(3);\nvar SidebarComponent = (function () {\n    function SidebarComponent() {\n        this.open = false;\n    }\n    SidebarComponent = __decorate([\n        core_1.Component({\n            selector: 'sidebar',\n            styles: [__webpack_require__(68)],\n            template: __webpack_require__(69),\n            animations: [\n                core_2.trigger('sidebarOpen', [\n                    core_2.state('close', core_2.style({\n                        left: '-300px'\n                    })),\n                    core_2.state('open', core_2.style({\n                        left: '0px'\n                    })),\n                    core_2.transition('close => open', core_2.animate('100ms ease-in')),\n                    core_2.transition('open => close', core_2.animate('100ms ease-out'))\n                ])\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], SidebarComponent);\n    return SidebarComponent;\n}());\nexports.SidebarComponent = SidebarComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L3NpZGViYXIuY29tcG9uZW50LnRzPzRhMGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB0cmlnZ2VyLHN0YXRlLHRyYW5zaXRpb24sc3R5bGUsYW5pbWF0ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3NpZGViYXInLFxuICAgIHN0eWxlczpbcmVxdWlyZSgnLi4vc3R5bGUvc2lkZWJhci5jb21wb25lbnQuc2NzcycpXSxcbiAgICB0ZW1wbGF0ZTogcmVxdWlyZSgnLi4vdmlldy9zaWRlYmFyLmNvbXBvbmVudC5odG1sJyksXG4gICAgYW5pbWF0aW9uczogW1xuICAgIHRyaWdnZXIoJ3NpZGViYXJPcGVuJywgW1xuICAgICAgc3RhdGUoJ2Nsb3NlJywgc3R5bGUoe1xuICAgICAgICBsZWZ0OiAnLTMwMHB4J1xuICAgICAgfSkpLFxuICAgICAgc3RhdGUoJ29wZW4nLCBzdHlsZSh7XG4gICAgICAgIGxlZnQ6ICcwcHgnXG4gICAgICB9KSksXG4gICAgICB0cmFuc2l0aW9uKCdjbG9zZSA9PiBvcGVuJywgYW5pbWF0ZSgnMTAwbXMgZWFzZS1pbicpKSxcbiAgICAgIHRyYW5zaXRpb24oJ29wZW4gPT4gY2xvc2UnLCBhbmltYXRlKCcxMDBtcyBlYXNlLW91dCcpKVxuICAgIF0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU2lkZWJhckNvbXBvbmVudCAge1xuICAgIG9wZW49ZmFsc2U7XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9jbGllbnQvY29tcG9uZW50L3NpZGViYXIuY29tcG9uZW50LnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQW1CQTtBQUFBO0FBQ0E7QUFDQTtBQW5CQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQUE7QUFHQTtBQUFBO0FBRkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 68:
/***/ function(module, exports) {

	eval("module.exports = \"#sidebar {\\n  background: #8f42de;\\n  color: whitesmoke;\\n  width: 280px;\\n  height: 100%;\\n  position: absolute;\\n  top: 0px; }\\n\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvc3R5bGUvc2lkZWJhci5jb21wb25lbnQuc2Nzcz9kMzJjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCIjc2lkZWJhciB7XFxuICBiYWNrZ3JvdW5kOiAjOGY0MmRlO1xcbiAgY29sb3I6IHdoaXRlc21va2U7XFxuICB3aWR0aDogMjgwcHg7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDBweDsgfVxcblwiXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jbGllbnQvc3R5bGUvc2lkZWJhci5jb21wb25lbnQuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 69:
/***/ function(module, exports) {

	eval("module.exports = \"<div id=\\\"sidebar\\\" [@sidebarOpen]=\\\"open?'open':'close'\\\">\\n\\t<h2>sidebar</h2>\\n\\t<i class=\\\"ms-Icon ms-Icon--Cancel\\\" aria-hidden=\\\"true\\\" (click)=\\\"open=false\\\"></i>\\n\\t\\n</div>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9zaWRlYmFyLmNvbXBvbmVudC5odG1sP2M1NWQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgaWQ9XFxcInNpZGViYXJcXFwiIFtAc2lkZWJhck9wZW5dPVxcXCJvcGVuPydvcGVuJzonY2xvc2UnXFxcIj5cXG5cXHQ8aDI+c2lkZWJhcjwvaDI+XFxuXFx0PGkgY2xhc3M9XFxcIm1zLUljb24gbXMtSWNvbi0tQ2FuY2VsXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCIgKGNsaWNrKT1cXFwib3Blbj1mYWxzZVxcXCI+PC9pPlxcblxcdFxcbjwvZGl2PlwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3ZpZXcvc2lkZWJhci5jb21wb25lbnQuaHRtbFxuLy8gbW9kdWxlIGlkID0gNjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 70:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar geometry_2 = __webpack_require__(66);\nexports.ArtboardWidth = 3200;\nexports.ArtboardHeight = (2 / 3) * exports.ArtboardWidth;\nvar ArtboardComponent = (function () {\n    function ArtboardComponent() {\n        this.rectList = [];\n        this.mousedownEvent = new core_1.EventEmitter();\n        this.mousemoveEvent = new core_1.EventEmitter();\n        this.mouseupEvent = new core_1.EventEmitter();\n        this.st = new geometry_2.Point(1501, 1300);\n        this.en = new geometry_2.Point(1700, 700);\n        this.massiveArea = new geometry_1.Rect(0, 0, exports.ArtboardWidth, exports.ArtboardHeight);\n    }\n    ArtboardComponent.prototype.doubleClickedArtboard = function (event) {\n        var width = 200;\n        var height = 50;\n        var rect = new geometry_1.Rect(3200 / 2, 2133 / 2, width, height);\n        rect.x = event.offsetX - width / 2;\n        rect.y = event.offsetY - height / 2;\n        this.rectList.push(rect);\n        console.log(\"Added box\");\n    };\n    ArtboardComponent.prototype.mousedown = function (event) {\n        this.mousedownEvent.emit(event);\n        if (this.draggingInteraction != null) {\n            this.draggingInteraction.handleMousePress(event);\n        }\n    };\n    ArtboardComponent.prototype.mousemove = function (event) {\n        this.mousemoveEvent.emit(event);\n        if (this.draggingInteraction != null) {\n            this.draggingInteraction.handleMouseDrag(event);\n        }\n    };\n    ArtboardComponent.prototype.mouseup = function (event) {\n        this.mouseupEvent.emit(event);\n        if (this.draggingInteraction != null) {\n            this.draggingInteraction.handleMouseRelease(event);\n        }\n        this.draggingInteraction = null;\n    };\n    ArtboardComponent.prototype.setDragInteractionIfEmpty = function (dragProcessor) {\n        if (this.draggingInteraction == null) {\n            console.log(\"Setting new drag processor\");\n            this.draggingInteraction = dragProcessor;\n        }\n    };\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], ArtboardComponent.prototype, \"mousedownEvent\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], ArtboardComponent.prototype, \"mousemoveEvent\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], ArtboardComponent.prototype, \"mouseupEvent\", void 0);\n    ArtboardComponent = __decorate([\n        core_1.Component({\n            selector: 'artboard',\n            styles: [__webpack_require__(71)],\n            template: __webpack_require__(72),\n        }), \n        __metadata('design:paramtypes', [])\n    ], ArtboardComponent);\n    return ArtboardComponent;\n}());\nexports.ArtboardComponent = ArtboardComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L2FydGJvYXJkLmNvbXBvbmVudC50cz81N2NlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCxPdXRwdXQsRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhbmltYXRlLHRyaWdnZXIsc3RhdGUsdHJhbnNpdGlvbixzdHlsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVjdCB9IGZyb20gJy4uL21vZGVsL2dlb21ldHJ5JztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi4vbW9kZWwvZ2VvbWV0cnknO1xuaW1wb3J0IHsgUHJlc3NEcmFnUmVsZWFzZVByb2Nlc3NvciB9IGZyb20gJy4uL3V0aWxpdHkvY29tbW9uJztcblxuZXhwb3J0IGNvbnN0IEFydGJvYXJkV2lkdGg9MzIwMDtcbmV4cG9ydCBjb25zdCBBcnRib2FyZEhlaWdodD0oMi8zKSpBcnRib2FyZFdpZHRoO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcnRib2FyZCcsXG4gIHN0eWxlczpbcmVxdWlyZSgnLi4vc3R5bGUvYXJ0Ym9hcmQuY29tcG9uZW50LnNjc3MnKV0sXG4gIHRlbXBsYXRlOiByZXF1aXJlKCcuLi92aWV3L2FydGJvYXJkLmNvbXBvbmVudC5odG1sJyksXG4gIFxufSlcbmV4cG9ydCBjbGFzcyBBcnRib2FyZENvbXBvbmVudCAge1xuICAgIG1hc3NpdmVBcmVhOlJlY3Q7XG4gICAgcmVjdExpc3Q6UmVjdFtdPVtdO1xuXG4gICAgQE91dHB1dCgpIG1vdXNlZG93bkV2ZW50PW5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcbiAgICBAT3V0cHV0KCkgbW91c2Vtb3ZlRXZlbnQ9bmV3IEV2ZW50RW1pdHRlcjxNb3VzZUV2ZW50PigpO1xuICAgIEBPdXRwdXQoKSBtb3VzZXVwRXZlbnQ9bmV3IEV2ZW50RW1pdHRlcjxNb3VzZUV2ZW50PigpO1xuXG5cdHByaXZhdGUgZHJhZ2dpbmdJbnRlcmFjdGlvbjpQcmVzc0RyYWdSZWxlYXNlUHJvY2Vzc29yO1xuXG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgIHRoaXMubWFzc2l2ZUFyZWE9bmV3IFJlY3QoMCwwLEFydGJvYXJkV2lkdGgsQXJ0Ym9hcmRIZWlnaHQpO1xuICAgIH1cblxuICAgIGRvdWJsZUNsaWNrZWRBcnRib2FyZChldmVudDpNb3VzZUV2ZW50KXtcbiAgICAgICAgdmFyIHdpZHRoPTIwMDtcbiAgICAgICAgdmFyIGhlaWdodD01MDtcbiAgICAgICAgdmFyIHJlY3Q9bmV3IFJlY3QoMzIwMC8yLDIxMzMvMix3aWR0aCxoZWlnaHQpO1xuICAgICAgICByZWN0Lng9ZXZlbnQub2Zmc2V0WC13aWR0aC8yO1xuICAgICAgICByZWN0Lnk9ZXZlbnQub2Zmc2V0WS1oZWlnaHQvMjtcbiAgICAgICAgdGhpcy5yZWN0TGlzdC5wdXNoKHJlY3QpO1xuXHRcdGNvbnNvbGUubG9nKFwiQWRkZWQgYm94XCIpO1xuICAgIH1cblxuXHRtb3VzZWRvd24oZXZlbnQ6TW91c2VFdmVudCl7XG5cdFx0dGhpcy5tb3VzZWRvd25FdmVudC5lbWl0KGV2ZW50KTtcblx0XHRpZih0aGlzLmRyYWdnaW5nSW50ZXJhY3Rpb24hPW51bGwpe1xuXHRcdFx0dGhpcy5kcmFnZ2luZ0ludGVyYWN0aW9uLmhhbmRsZU1vdXNlUHJlc3MoZXZlbnQpO1xuXHRcdH1cblx0fVxuXG5cdG1vdXNlbW92ZShldmVudDpNb3VzZUV2ZW50KXtcblx0XHR0aGlzLm1vdXNlbW92ZUV2ZW50LmVtaXQoZXZlbnQpO1x0XG5cdFx0aWYodGhpcy5kcmFnZ2luZ0ludGVyYWN0aW9uIT1udWxsKXtcblx0XHRcdHRoaXMuZHJhZ2dpbmdJbnRlcmFjdGlvbi5oYW5kbGVNb3VzZURyYWcoZXZlbnQpO1xuXHRcdH1cblx0fVxuXG5cdG1vdXNldXAoZXZlbnQ6TW91c2VFdmVudCl7XG5cdFx0dGhpcy5tb3VzZXVwRXZlbnQuZW1pdChldmVudCk7XHRcblx0XHRpZih0aGlzLmRyYWdnaW5nSW50ZXJhY3Rpb24hPW51bGwpe1xuXHRcdFx0dGhpcy5kcmFnZ2luZ0ludGVyYWN0aW9uLmhhbmRsZU1vdXNlUmVsZWFzZShldmVudCk7XG5cdFx0fVxuXHRcdHRoaXMuZHJhZ2dpbmdJbnRlcmFjdGlvbj1udWxsO1xuXHR9XG5cblx0c2V0RHJhZ0ludGVyYWN0aW9uSWZFbXB0eShkcmFnUHJvY2Vzc29yOlByZXNzRHJhZ1JlbGVhc2VQcm9jZXNzb3Ipe1xuXHRcdGlmKHRoaXMuZHJhZ2dpbmdJbnRlcmFjdGlvbj09bnVsbCl7XG5cdFx0XHRjb25zb2xlLmxvZyhcIlNldHRpbmcgbmV3IGRyYWcgcHJvY2Vzc29yXCIpO1xuXHRcdFx0dGhpcy5kcmFnZ2luZ0ludGVyYWN0aW9uPWRyYWdQcm9jZXNzb3I7XG5cdFx0fVxuXHR9XG5cblx0c3Q9bmV3IFBvaW50KDE1MDEsMTMwMCk7XG5cdGVuPW5ldyBQb2ludCgxNzAwLDcwMCk7XG5cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9jb21wb25lbnQvYXJ0Ym9hcmQuY29tcG9uZW50LnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQVFBO0FBVUE7QUFSQTtBQUVBO0FBQ0E7QUFDQTtBQStDQTtBQUNBO0FBM0NBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQS9DQTtBQUFBOztBQUFBO0FBQ0E7QUFBQTs7QUFBQTtBQUNBO0FBQUE7O0FBQUE7QUFaQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBQUE7QUF5REE7QUFBQTtBQXhEQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 71:
/***/ function(module, exports) {

	eval("module.exports = \"#massive-area {\\n  position: absolute; }\\n  #massive-area #starter-tip {\\n    position: absolute;\\n    color: orange; }\\n\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvc3R5bGUvYXJ0Ym9hcmQuY29tcG9uZW50LnNjc3M/NDJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiI21hc3NpdmUtYXJlYSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cXG4gICNtYXNzaXZlLWFyZWEgI3N0YXJ0ZXItdGlwIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBjb2xvcjogb3JhbmdlOyB9XFxuXCJcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC9zdHlsZS9hcnRib2FyZC5jb21wb25lbnQuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 72:
/***/ function(module, exports) {

	eval("module.exports = \"<div id=\\\"massive-area\\\"\\n [style.width]=\\\"massiveArea.width+'px'\\\" \\n [style.height]=\\\"massiveArea.height+'px'\\\" \\n [style.left]=\\\"massiveArea.x+'px'\\\" \\n [style.top]=\\\"massiveArea.y+'px'\\\"\\n (mousedown)=\\\"mousedown($event)\\\"\\n (mousemove)=\\\"mousemove($event)\\\"\\n (mouseup)=\\\"mouseup($event)\\\"\\n (dblclick)=\\\"doubleClickedArtboard($event)\\\"\\n >\\n\\t<h1 id=\\\"starter-tip\\\"\\n\\t[style.left]=\\\"massiveArea.width/2\\\"\\n\\t[style.top]=\\\"massiveArea.height/2\\\"\\n\\t>Double click anywhere to create a box</h1>\\n\\t<box *ngFor=\\\"let rect of rectList\\\" [rect]=\\\"rect\\\" (requestDragging)=\\\"setDragInteractionIfEmpty($event)\\\"></box>\\n\\t<line-segment [start]=\\\"st\\\" [end]=\\\"en\\\"></line-segment>\\n</div>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9hcnRib2FyZC5jb21wb25lbnQuaHRtbD9kMDFjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8ZGl2IGlkPVxcXCJtYXNzaXZlLWFyZWFcXFwiXFxuIFtzdHlsZS53aWR0aF09XFxcIm1hc3NpdmVBcmVhLndpZHRoKydweCdcXFwiIFxcbiBbc3R5bGUuaGVpZ2h0XT1cXFwibWFzc2l2ZUFyZWEuaGVpZ2h0KydweCdcXFwiIFxcbiBbc3R5bGUubGVmdF09XFxcIm1hc3NpdmVBcmVhLngrJ3B4J1xcXCIgXFxuIFtzdHlsZS50b3BdPVxcXCJtYXNzaXZlQXJlYS55KydweCdcXFwiXFxuIChtb3VzZWRvd24pPVxcXCJtb3VzZWRvd24oJGV2ZW50KVxcXCJcXG4gKG1vdXNlbW92ZSk9XFxcIm1vdXNlbW92ZSgkZXZlbnQpXFxcIlxcbiAobW91c2V1cCk9XFxcIm1vdXNldXAoJGV2ZW50KVxcXCJcXG4gKGRibGNsaWNrKT1cXFwiZG91YmxlQ2xpY2tlZEFydGJvYXJkKCRldmVudClcXFwiXFxuID5cXG5cXHQ8aDEgaWQ9XFxcInN0YXJ0ZXItdGlwXFxcIlxcblxcdFtzdHlsZS5sZWZ0XT1cXFwibWFzc2l2ZUFyZWEud2lkdGgvMlxcXCJcXG5cXHRbc3R5bGUudG9wXT1cXFwibWFzc2l2ZUFyZWEuaGVpZ2h0LzJcXFwiXFxuXFx0PkRvdWJsZSBjbGljayBhbnl3aGVyZSB0byBjcmVhdGUgYSBib3g8L2gxPlxcblxcdDxib3ggKm5nRm9yPVxcXCJsZXQgcmVjdCBvZiByZWN0TGlzdFxcXCIgW3JlY3RdPVxcXCJyZWN0XFxcIiAocmVxdWVzdERyYWdnaW5nKT1cXFwic2V0RHJhZ0ludGVyYWN0aW9uSWZFbXB0eSgkZXZlbnQpXFxcIj48L2JveD5cXG5cXHQ8bGluZS1zZWdtZW50IFtzdGFydF09XFxcInN0XFxcIiBbZW5kXT1cXFwiZW5cXFwiPjwvbGluZS1zZWdtZW50PlxcbjwvZGl2PlwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3ZpZXcvYXJ0Ym9hcmQuY29tcG9uZW50Lmh0bWxcbi8vIG1vZHVsZSBpZCA9IDcyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 73:
/***/ function(module, exports) {

	eval("module.exports = \"#menu-controls {\\n  position: absolute;\\n  padding: 0px;\\n  top: 10px; }\\n  #menu-controls li {\\n    color: blue;\\n    cursor: pointer;\\n    display: inline;\\n    list-style: none; }\\n  #menu-controls li:hover {\\n    color: darkblue; }\\n\\n#container {\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvc3R5bGUvd29ya3NwYWNlLmNvbXBvbmVudC5zY3NzP2NiMGQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIiNtZW51LWNvbnRyb2xzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHBhZGRpbmc6IDBweDtcXG4gIHRvcDogMTBweDsgfVxcbiAgI21lbnUtY29udHJvbHMgbGkge1xcbiAgICBjb2xvcjogYmx1ZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBpbmxpbmU7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cXG4gICNtZW51LWNvbnRyb2xzIGxpOmhvdmVyIHtcXG4gICAgY29sb3I6IGRhcmtibHVlOyB9XFxuXFxuI2NvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDBweDtcXG4gIGxlZnQ6IDBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IH1cXG5cIlxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3N0eWxlL3dvcmtzcGFjZS5jb21wb25lbnQuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 74:
/***/ function(module, exports) {

	eval("module.exports = \"<div id=\\\"container\\\" \\n\\t[focus]=\\\"true\\\"\\n\\t(window:keydown)=\\\"keydown($event)\\\"\\n\\t(window:keyup)=\\\"keyup($event)\\\"\\n\\t(window:resize)=\\\"resize($event)\\\"\\n\\t[style.cursor]=\\\"windowMovementAllowed?(dragEntered?'all-scroll':'all-scroll'):'auto'\\\"\\n\\t>\\n\\t<artboard \\n\\t\\t(mousedownEvent)=\\\"mousedown($event)\\\"\\n\\t\\t(mousemoveEvent)=\\\"mousemove($event)\\\"\\n\\t\\t(mouseupEvent)=\\\"mouseup($event)\\\"\\n\\t></artboard>\\n\\t<sidebar></sidebar>\\n\\t<ul id=\\\"menu-controls\\\" [@shiftMenuControls]=\\\"sidebar.open?'shifted':'unshifted'\\\">\\n\\t\\t<li (click)=toggleSidebar()>Menu</li>\\n\\t\\t<li>Area</li>\\n\\t\\t<li>Overview</li>\\n\\t</ul>\\n</div>\\n\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy93b3Jrc3BhY2UuY29tcG9uZW50Lmh0bWw/Y2NjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPGRpdiBpZD1cXFwiY29udGFpbmVyXFxcIiBcXG5cXHRbZm9jdXNdPVxcXCJ0cnVlXFxcIlxcblxcdCh3aW5kb3c6a2V5ZG93bik9XFxcImtleWRvd24oJGV2ZW50KVxcXCJcXG5cXHQod2luZG93OmtleXVwKT1cXFwia2V5dXAoJGV2ZW50KVxcXCJcXG5cXHQod2luZG93OnJlc2l6ZSk9XFxcInJlc2l6ZSgkZXZlbnQpXFxcIlxcblxcdFtzdHlsZS5jdXJzb3JdPVxcXCJ3aW5kb3dNb3ZlbWVudEFsbG93ZWQ/KGRyYWdFbnRlcmVkPydhbGwtc2Nyb2xsJzonYWxsLXNjcm9sbCcpOidhdXRvJ1xcXCJcXG5cXHQ+XFxuXFx0PGFydGJvYXJkIFxcblxcdFxcdChtb3VzZWRvd25FdmVudCk9XFxcIm1vdXNlZG93bigkZXZlbnQpXFxcIlxcblxcdFxcdChtb3VzZW1vdmVFdmVudCk9XFxcIm1vdXNlbW92ZSgkZXZlbnQpXFxcIlxcblxcdFxcdChtb3VzZXVwRXZlbnQpPVxcXCJtb3VzZXVwKCRldmVudClcXFwiXFxuXFx0PjwvYXJ0Ym9hcmQ+XFxuXFx0PHNpZGViYXI+PC9zaWRlYmFyPlxcblxcdDx1bCBpZD1cXFwibWVudS1jb250cm9sc1xcXCIgW0BzaGlmdE1lbnVDb250cm9sc109XFxcInNpZGViYXIub3Blbj8nc2hpZnRlZCc6J3Vuc2hpZnRlZCdcXFwiPlxcblxcdFxcdDxsaSAoY2xpY2spPXRvZ2dsZVNpZGViYXIoKT5NZW51PC9saT5cXG5cXHRcXHQ8bGk+QXJlYTwvbGk+XFxuXFx0XFx0PGxpPk92ZXJ2aWV3PC9saT5cXG5cXHQ8L3VsPlxcbjwvZGl2PlxcblwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3ZpZXcvd29ya3NwYWNlLmNvbXBvbmVudC5odG1sXG4vLyBtb2R1bGUgaWQgPSA3NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 75:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar AreaComponent = (function () {\n    function AreaComponent() {\n    }\n    AreaComponent = __decorate([\n        core_1.Component({\n            selector: 'area-highlight',\n            template: __webpack_require__(76),\n        }), \n        __metadata('design:paramtypes', [])\n    ], AreaComponent);\n    return AreaComponent;\n}());\nexports.AreaComponent = AreaComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L2FyZWEuY29tcG9uZW50LnRzP2U0MTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FyZWEtaGlnaGxpZ2h0JyxcbiAgdGVtcGxhdGU6IHJlcXVpcmUoJy4uL3ZpZXcvYXJlYS5jb21wb25lbnQuaHRtbCcpLFxufSlcbmV4cG9ydCBjbGFzcyBBcmVhQ29tcG9uZW50ICB7XG5cdFxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vY2xpZW50L2NvbXBvbmVudC9hcmVhLmNvbXBvbmVudC50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBTUE7QUFBQTtBQUVBO0FBTkE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFBQTtBQUdBO0FBQUE7QUFGQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 76:
/***/ function(module, exports) {

	eval("module.exports = \"<h1>TODO area</h1>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9hcmVhLmNvbXBvbmVudC5odG1sPzQyMTQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxoMT5UT0RPIGFyZWE8L2gxPlwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY2xpZW50L3ZpZXcvYXJlYS5jb21wb25lbnQuaHRtbFxuLy8gbW9kdWxlIGlkID0gNzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 77:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar core_2 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar resize_handle_component_1 = __webpack_require__(79);\nvar BoxComponent = (function () {\n    function BoxComponent() {\n        this.requestDragging = new core_1.EventEmitter();\n        this.isSelected = false;\n    }\n    BoxComponent.prototype.toggleSelection = function () {\n        this.isSelected = !this.isSelected;\n    };\n    BoxComponent.prototype.handleMousePress = function (event) {\n    };\n    BoxComponent.prototype.handleMouseDrag = function (event) {\n    };\n    BoxComponent.prototype.handleMouseRelease = function (event) {\n    };\n    BoxComponent.prototype.registerDragIntention = function (dragProcessor) {\n        this.requestDragging.emit(dragProcessor);\n    };\n    BoxComponent.prototype.updateAllResizeHandlers = function (resizeHandler) {\n        this.resizeHandlers.forEach(function (item) {\n            item.updateHandlePosition();\n        });\n    };\n    __decorate([\n        core_1.Input('rect'), \n        __metadata('design:type', (typeof (_a = typeof geometry_1.Rect !== 'undefined' && geometry_1.Rect) === 'function' && _a) || Object)\n    ], BoxComponent.prototype, \"rect\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], BoxComponent.prototype, \"requestDragging\", void 0);\n    __decorate([\n        core_1.ViewChildren(resize_handle_component_1.ResizeHandleComponent), \n        __metadata('design:type', (typeof (_b = typeof core_1.QueryList !== 'undefined' && core_1.QueryList) === 'function' && _b) || Object)\n    ], BoxComponent.prototype, \"resizeHandlers\", void 0);\n    BoxComponent = __decorate([\n        core_1.Component({\n            selector: 'box',\n            template: __webpack_require__(78),\n            animations: [\n                core_2.trigger('selection', [\n                    core_2.state('selected', core_2.style({\n                        borderColor: \"#2BA3FC\"\n                    })),\n                    core_2.state('unselected', core_2.style({\n                        borderColor: \"black\"\n                    })),\n                    core_2.transition('selected => unselected', core_2.animate('100ms ease-in')),\n                    core_2.transition('unselected => selected', core_2.animate('100ms ease-out'))\n                ])\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], BoxComponent);\n    return BoxComponent;\n    var _a, _b;\n}());\nexports.BoxComponent = BoxComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L2JveC5jb21wb25lbnQudHM/ODU5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsSW5wdXQsT3V0cHV0LEV2ZW50RW1pdHRlcixWaWV3Q2hpbGRyZW4sUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhbmltYXRlLHRyaWdnZXIsc3RhdGUsc3R5bGUsdHJhbnNpdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVjdCB9IGZyb20gJy4uL21vZGVsL2dlb21ldHJ5JztcbmltcG9ydCB7IERpcmVjdGlvbixQcmVzc0RyYWdSZWxlYXNlUHJvY2Vzc29yIH0gZnJvbSAnLi4vdXRpbGl0eS9jb21tb24nO1xuaW1wb3J0IHsgUmVzaXplSGFuZGxlQ29tcG9uZW50IH0gZnJvbSAnLi9yZXNpemUtaGFuZGxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JveCcsXG4gIHRlbXBsYXRlOiByZXF1aXJlKCcuLi92aWV3L2JveC5jb21wb25lbnQuaHRtbCcpLFxuICBhbmltYXRpb25zOltcbiAgICB0cmlnZ2VyKCdzZWxlY3Rpb24nLFtcbiAgICAgICAgc3RhdGUoJ3NlbGVjdGVkJyxzdHlsZSh7XG4gICAgICAgICAgICBib3JkZXJDb2xvcjpcIiMyQkEzRkNcIlxuICAgICAgICB9KSksXG4gICAgICAgIHN0YXRlKCd1bnNlbGVjdGVkJywgc3R5bGUoe1xuICAgICAgICAgICAgYm9yZGVyQ29sb3I6XCJibGFja1wiXG4gICAgICAgIH0pKSxcbiAgICAgICAgdHJhbnNpdGlvbignc2VsZWN0ZWQgPT4gdW5zZWxlY3RlZCcsIGFuaW1hdGUoJzEwMG1zIGVhc2UtaW4nKSksXG4gICAgICAgIHRyYW5zaXRpb24oJ3Vuc2VsZWN0ZWQgPT4gc2VsZWN0ZWQnLCBhbmltYXRlKCcxMDBtcyBlYXNlLW91dCcpKVxuICAgIF0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQm94Q29tcG9uZW50IGltcGxlbWVudHMgUHJlc3NEcmFnUmVsZWFzZVByb2Nlc3NvciB7XG4gICAgXG5cdEBJbnB1dCgncmVjdCcpIHJlY3Q6UmVjdDtcblx0QE91dHB1dCgpIHJlcXVlc3REcmFnZ2luZz1uZXcgRXZlbnRFbWl0dGVyPFByZXNzRHJhZ1JlbGVhc2VQcm9jZXNzb3I+KCk7XG5cdEBWaWV3Q2hpbGRyZW4oUmVzaXplSGFuZGxlQ29tcG9uZW50KSByZXNpemVIYW5kbGVyczpRdWVyeUxpc3Q8UmVzaXplSGFuZGxlQ29tcG9uZW50PjtcbiAgICBcbiAgICBpc1NlbGVjdGVkPWZhbHNlO1xuXG4gICAgdG9nZ2xlU2VsZWN0aW9uKCl7XG4gICAgICAgIHRoaXMuaXNTZWxlY3RlZD0hdGhpcy5pc1NlbGVjdGVkO1xuICAgIH1cdFxuXG5cdGhhbmRsZU1vdXNlUHJlc3MoZXZlbnQ6TW91c2VFdmVudCk6dm9pZHtcblxuXHR9XG5cdFxuXHRoYW5kbGVNb3VzZURyYWcoZXZlbnQ6TW91c2VFdmVudCk6dm9pZHtcblxuXHR9XG5cblx0aGFuZGxlTW91c2VSZWxlYXNlKGV2ZW50Ok1vdXNlRXZlbnQpOnZvaWR7XG5cblx0fVxuXG5cdHJlZ2lzdGVyRHJhZ0ludGVudGlvbihkcmFnUHJvY2Vzc29yOlByZXNzRHJhZ1JlbGVhc2VQcm9jZXNzb3Ipe1xuXHRcdHRoaXMucmVxdWVzdERyYWdnaW5nLmVtaXQoZHJhZ1Byb2Nlc3Nvcik7XG5cdH1cblxuXHR1cGRhdGVBbGxSZXNpemVIYW5kbGVycyhyZXNpemVIYW5kbGVyOlJlc2l6ZUhhbmRsZUNvbXBvbmVudCl7XG5cdFx0dGhpcy5yZXNpemVIYW5kbGVycy5mb3JFYWNoKChpdGVtKT0+e1xuXHRcdFx0aXRlbS51cGRhdGVIYW5kbGVQb3NpdGlvbigpO1xuXHRcdH0pO1xuXHR9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9jbGllbnQvY29tcG9uZW50L2JveC5jb21wb25lbnQudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQWtCQTtBQUFBO0FBR0E7QUFHQTtBQTJCQTtBQXpCQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBOUJBO0FBQUE7O0FBQUE7QUFDQTtBQUFBOztBQUFBO0FBQ0E7QUFBQTs7QUFBQTtBQXBCQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUFBO0FBa0NBOztBQUFBO0FBakNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 78:
/***/ function(module, exports) {

	eval("module.exports = \"<div class=\\\"generic-block\\\"\\n[style.left.px]=\\\"rect.x\\\"\\n[style.top.px]=\\\"rect.y\\\"\\n[style.width.px]=\\\"rect.width\\\"\\n[style.height.px]=\\\"rect.height\\\"\\n[@selection]=\\\"isSelected?'selected':'unselected'\\\" \\n(click)=\\\"toggleSelection()\\\" \\n(mousepress)=\\\"registerDragIntention(this)\\\"></div>\\n\\n<!-- 8 Reize handlers with different placement can be placed outside (absolute positioned)-->\\n<!-- TODO possible through loop but angular 2 doesn't provide general counter loops-->\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"1\\\" \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"2\\\"  \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"3\\\"  \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"4\\\"  \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"5\\\"  \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"6\\\"  \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"7\\\" \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\\n<resize-handle [rect]=\\\"rect\\\" [placement]=\\\"8\\\"  \\n*ngIf=\\\"isSelected\\\" \\n(requestDragging)=\\\"registerDragIntention($event)\\\" \\n(updateAllResizeHandlers)=\\\"updateAllResizeHandlers($event)\\\">\\n</resize-handle>\\n\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9ib3guY29tcG9uZW50Lmh0bWw/MWYyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPGRpdiBjbGFzcz1cXFwiZ2VuZXJpYy1ibG9ja1xcXCJcXG5bc3R5bGUubGVmdC5weF09XFxcInJlY3QueFxcXCJcXG5bc3R5bGUudG9wLnB4XT1cXFwicmVjdC55XFxcIlxcbltzdHlsZS53aWR0aC5weF09XFxcInJlY3Qud2lkdGhcXFwiXFxuW3N0eWxlLmhlaWdodC5weF09XFxcInJlY3QuaGVpZ2h0XFxcIlxcbltAc2VsZWN0aW9uXT1cXFwiaXNTZWxlY3RlZD8nc2VsZWN0ZWQnOid1bnNlbGVjdGVkJ1xcXCIgXFxuKGNsaWNrKT1cXFwidG9nZ2xlU2VsZWN0aW9uKClcXFwiIFxcbihtb3VzZXByZXNzKT1cXFwicmVnaXN0ZXJEcmFnSW50ZW50aW9uKHRoaXMpXFxcIj48L2Rpdj5cXG5cXG48IS0tIDggUmVpemUgaGFuZGxlcnMgd2l0aCBkaWZmZXJlbnQgcGxhY2VtZW50IGNhbiBiZSBwbGFjZWQgb3V0c2lkZSAoYWJzb2x1dGUgcG9zaXRpb25lZCktLT5cXG48IS0tIFRPRE8gcG9zc2libGUgdGhyb3VnaCBsb29wIGJ1dCBhbmd1bGFyIDIgZG9lc24ndCBwcm92aWRlIGdlbmVyYWwgY291bnRlciBsb29wcy0tPlxcbjxyZXNpemUtaGFuZGxlIFtyZWN0XT1cXFwicmVjdFxcXCIgW3BsYWNlbWVudF09XFxcIjFcXFwiIFxcbipuZ0lmPVxcXCJpc1NlbGVjdGVkXFxcIiBcXG4ocmVxdWVzdERyYWdnaW5nKT1cXFwicmVnaXN0ZXJEcmFnSW50ZW50aW9uKCRldmVudClcXFwiIFxcbih1cGRhdGVBbGxSZXNpemVIYW5kbGVycyk9XFxcInVwZGF0ZUFsbFJlc2l6ZUhhbmRsZXJzKCRldmVudClcXFwiPlxcbjwvcmVzaXplLWhhbmRsZT5cXG5cXG48cmVzaXplLWhhbmRsZSBbcmVjdF09XFxcInJlY3RcXFwiIFtwbGFjZW1lbnRdPVxcXCIyXFxcIiAgXFxuKm5nSWY9XFxcImlzU2VsZWN0ZWRcXFwiIFxcbihyZXF1ZXN0RHJhZ2dpbmcpPVxcXCJyZWdpc3RlckRyYWdJbnRlbnRpb24oJGV2ZW50KVxcXCIgXFxuKHVwZGF0ZUFsbFJlc2l6ZUhhbmRsZXJzKT1cXFwidXBkYXRlQWxsUmVzaXplSGFuZGxlcnMoJGV2ZW50KVxcXCI+XFxuPC9yZXNpemUtaGFuZGxlPlxcblxcbjxyZXNpemUtaGFuZGxlIFtyZWN0XT1cXFwicmVjdFxcXCIgW3BsYWNlbWVudF09XFxcIjNcXFwiICBcXG4qbmdJZj1cXFwiaXNTZWxlY3RlZFxcXCIgXFxuKHJlcXVlc3REcmFnZ2luZyk9XFxcInJlZ2lzdGVyRHJhZ0ludGVudGlvbigkZXZlbnQpXFxcIiBcXG4odXBkYXRlQWxsUmVzaXplSGFuZGxlcnMpPVxcXCJ1cGRhdGVBbGxSZXNpemVIYW5kbGVycygkZXZlbnQpXFxcIj5cXG48L3Jlc2l6ZS1oYW5kbGU+XFxuXFxuPHJlc2l6ZS1oYW5kbGUgW3JlY3RdPVxcXCJyZWN0XFxcIiBbcGxhY2VtZW50XT1cXFwiNFxcXCIgIFxcbipuZ0lmPVxcXCJpc1NlbGVjdGVkXFxcIiBcXG4ocmVxdWVzdERyYWdnaW5nKT1cXFwicmVnaXN0ZXJEcmFnSW50ZW50aW9uKCRldmVudClcXFwiIFxcbih1cGRhdGVBbGxSZXNpemVIYW5kbGVycyk9XFxcInVwZGF0ZUFsbFJlc2l6ZUhhbmRsZXJzKCRldmVudClcXFwiPlxcbjwvcmVzaXplLWhhbmRsZT5cXG5cXG48cmVzaXplLWhhbmRsZSBbcmVjdF09XFxcInJlY3RcXFwiIFtwbGFjZW1lbnRdPVxcXCI1XFxcIiAgXFxuKm5nSWY9XFxcImlzU2VsZWN0ZWRcXFwiIFxcbihyZXF1ZXN0RHJhZ2dpbmcpPVxcXCJyZWdpc3RlckRyYWdJbnRlbnRpb24oJGV2ZW50KVxcXCIgXFxuKHVwZGF0ZUFsbFJlc2l6ZUhhbmRsZXJzKT1cXFwidXBkYXRlQWxsUmVzaXplSGFuZGxlcnMoJGV2ZW50KVxcXCI+XFxuPC9yZXNpemUtaGFuZGxlPlxcblxcbjxyZXNpemUtaGFuZGxlIFtyZWN0XT1cXFwicmVjdFxcXCIgW3BsYWNlbWVudF09XFxcIjZcXFwiICBcXG4qbmdJZj1cXFwiaXNTZWxlY3RlZFxcXCIgXFxuKHJlcXVlc3REcmFnZ2luZyk9XFxcInJlZ2lzdGVyRHJhZ0ludGVudGlvbigkZXZlbnQpXFxcIiBcXG4odXBkYXRlQWxsUmVzaXplSGFuZGxlcnMpPVxcXCJ1cGRhdGVBbGxSZXNpemVIYW5kbGVycygkZXZlbnQpXFxcIj5cXG48L3Jlc2l6ZS1oYW5kbGU+XFxuXFxuPHJlc2l6ZS1oYW5kbGUgW3JlY3RdPVxcXCJyZWN0XFxcIiBbcGxhY2VtZW50XT1cXFwiN1xcXCIgXFxuKm5nSWY9XFxcImlzU2VsZWN0ZWRcXFwiIFxcbihyZXF1ZXN0RHJhZ2dpbmcpPVxcXCJyZWdpc3RlckRyYWdJbnRlbnRpb24oJGV2ZW50KVxcXCIgXFxuKHVwZGF0ZUFsbFJlc2l6ZUhhbmRsZXJzKT1cXFwidXBkYXRlQWxsUmVzaXplSGFuZGxlcnMoJGV2ZW50KVxcXCI+XFxuPC9yZXNpemUtaGFuZGxlPlxcblxcbjxyZXNpemUtaGFuZGxlIFtyZWN0XT1cXFwicmVjdFxcXCIgW3BsYWNlbWVudF09XFxcIjhcXFwiICBcXG4qbmdJZj1cXFwiaXNTZWxlY3RlZFxcXCIgXFxuKHJlcXVlc3REcmFnZ2luZyk9XFxcInJlZ2lzdGVyRHJhZ0ludGVudGlvbigkZXZlbnQpXFxcIiBcXG4odXBkYXRlQWxsUmVzaXplSGFuZGxlcnMpPVxcXCJ1cGRhdGVBbGxSZXNpemVIYW5kbGVycygkZXZlbnQpXFxcIj5cXG48L3Jlc2l6ZS1oYW5kbGU+XFxuXCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jbGllbnQvdmlldy9ib3guY29tcG9uZW50Lmh0bWxcbi8vIG1vZHVsZSBpZCA9IDc4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 79:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar common_1 = __webpack_require__(80);\nvar tracking_point_1 = __webpack_require__(81);\nvar ResizeHandleComponent = (function () {\n    function ResizeHandleComponent() {\n        this.requestDragging = new core_1.EventEmitter();\n        this.updateAllResizeHandlers = new core_1.EventEmitter();\n        this.startX = 0;\n        this.startY = 0;\n        this.lastX = 0;\n        this.lastY = 0;\n    }\n    ResizeHandleComponent.prototype.ngOnInit = function () {\n        this.initHandle();\n        this.updateHandlePosition();\n    };\n    ResizeHandleComponent.prototype.initHandle = function () {\n        //initialize tracking point based on this handles placement\n        this.pointOnSide = new tracking_point_1.RectTrackingPoint(this.rect);\n        switch (this.placement) {\n            case common_1.Direction.Top:\n                this.pointOnSide.fraction = 0.5;\n                this.pointOnSide.side = common_1.Direction.Top;\n                this.cursor = \"ns-resize\";\n                break;\n            case common_1.Direction.TopLeft:\n                this.pointOnSide.fraction = 0;\n                this.pointOnSide.side = common_1.Direction.Top;\n                this.cursor = \"nwse-resize\";\n                break;\n            case common_1.Direction.TopRight:\n                this.pointOnSide.fraction = 1;\n                this.pointOnSide.side = common_1.Direction.Top;\n                this.cursor = \"nesw-resize\";\n                break;\n            case common_1.Direction.Bottom:\n                this.pointOnSide.fraction = 0.5;\n                this.pointOnSide.side = common_1.Direction.Bottom;\n                this.cursor = \"ns-resize\";\n                break;\n            case common_1.Direction.BottomLeft:\n                this.pointOnSide.fraction = 1; //because fraction of rect with side goes clockwise\n                this.pointOnSide.side = common_1.Direction.Bottom;\n                this.cursor = \"nesw-resize\";\n                break;\n            case common_1.Direction.BottomRight:\n                this.pointOnSide.fraction = 0;\n                this.pointOnSide.side = common_1.Direction.Bottom;\n                this.cursor = \"nwse-resize\";\n                break;\n            case common_1.Direction.Left:\n                this.pointOnSide.fraction = 0.5;\n                this.pointOnSide.side = common_1.Direction.Left;\n                this.cursor = \"ew-resize\";\n                break;\n            case common_1.Direction.Right:\n                this.pointOnSide.fraction = 0.5;\n                this.pointOnSide.side = common_1.Direction.Right;\n                this.cursor = \"ew-resize\";\n                break;\n        }\n        //initialize handle's rect by using the tracking point\n        var point = this.pointOnSide.pointOnGeometry();\n        this.handle = new geometry_1.Rect(point.x - ResizeHandleComponent.HandleWidth / 2, point.y - ResizeHandleComponent.HandleWidth / 2, ResizeHandleComponent.HandleWidth, ResizeHandleComponent.HandleWidth);\n    };\n    ResizeHandleComponent.prototype.updateHandlePosition = function () {\n        var point = this.pointOnSide.pointOnGeometry();\n        //shift in the x and y relative to handle's width\n        var xShift = -0.5;\n        var yShift = -0.5;\n        //TODO fix minor visual displacement due to border outsets\n        this.handle.x = point.x + xShift * ResizeHandleComponent.HandleWidth;\n        this.handle.y = point.y + yShift * ResizeHandleComponent.HandleWidth;\n    };\n    ResizeHandleComponent.prototype.handleMousePress = function (event) {\n        this.startX = event.clientX;\n        this.startY = event.clientY;\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n    };\n    ResizeHandleComponent.prototype.handleMouseDrag = function (event) {\n        var dx = event.clientX - this.lastX;\n        var dy = event.clientY - this.lastY;\n        if (event.buttons == 1) {\n            //change the transform of the rect basis this handle's placement\n            switch (this.placement) {\n                case common_1.Direction.TopLeft:\n                    this.rect.x += dx;\n                    this.rect.y += dy;\n                    this.rect.width -= dx;\n                    this.rect.height -= dy;\n                    break;\n                case common_1.Direction.Top:\n                    this.rect.y += dy;\n                    this.rect.height -= dy;\n                    break;\n                case common_1.Direction.TopRight:\n                    this.rect.y += dy;\n                    this.rect.width += dx;\n                    this.rect.height -= dy;\n                    break;\n                case common_1.Direction.Right:\n                    this.rect.width += dx;\n                    break;\n                case common_1.Direction.BottomRight:\n                    this.rect.width += dx;\n                    this.rect.height += dy;\n                    break;\n                case common_1.Direction.Bottom:\n                    this.rect.height += dy;\n                    break;\n                case common_1.Direction.BottomLeft:\n                    this.rect.x += dx;\n                    this.rect.width -= dx;\n                    this.rect.height += dy;\n                    break;\n                case common_1.Direction.Left:\n                    this.rect.x += dx;\n                    this.rect.width -= dx;\n                    break;\n            }\n            this.updateAllResizeHandlers.emit(this);\n        }\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n    };\n    ResizeHandleComponent.prototype.handleMouseRelease = function (event) {\n        //TODO make command\n    };\n    ResizeHandleComponent.prototype.modelHasBeenChanged = function () {\n        console.log(\"Model has been changed\");\n    };\n    ResizeHandleComponent.HandleWidth = 8;\n    __decorate([\n        core_1.Input('rect'), \n        __metadata('design:type', (typeof (_a = typeof geometry_1.Rect !== 'undefined' && geometry_1.Rect) === 'function' && _a) || Object)\n    ], ResizeHandleComponent.prototype, \"rect\", void 0);\n    __decorate([\n        core_1.Input('placement'), \n        __metadata('design:type', (typeof (_b = typeof common_1.Direction !== 'undefined' && common_1.Direction) === 'function' && _b) || Object)\n    ], ResizeHandleComponent.prototype, \"placement\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], ResizeHandleComponent.prototype, \"requestDragging\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], ResizeHandleComponent.prototype, \"updateAllResizeHandlers\", void 0);\n    ResizeHandleComponent = __decorate([\n        core_1.Component({\n            selector: 'resize-handle',\n            template: __webpack_require__(82)\n        }), \n        __metadata('design:paramtypes', [])\n    ], ResizeHandleComponent);\n    return ResizeHandleComponent;\n    var _a, _b;\n}());\nexports.ResizeHandleComponent = ResizeHandleComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 80:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar geometry_1 = __webpack_require__(66);\n/** Gives radians when multiplied by an angle in degrees */\nexports.DegreesToRadians = Math.PI / 180;\n/** Gives degrees when multiplied by an angle in radians */\nexports.RadiansToDegrees = 180 / Math.PI;\n/** Represents direction in all 8 corners */\n(function (Direction) {\n    Direction[Direction[\"Top\"] = 1] = \"Top\";\n    Direction[Direction[\"TopRight\"] = 2] = \"TopRight\";\n    Direction[Direction[\"Right\"] = 3] = \"Right\";\n    Direction[Direction[\"BottomRight\"] = 4] = \"BottomRight\";\n    Direction[Direction[\"Bottom\"] = 5] = \"Bottom\";\n    Direction[Direction[\"BottomLeft\"] = 6] = \"BottomLeft\";\n    Direction[Direction[\"Left\"] = 7] = \"Left\";\n    Direction[Direction[\"TopLeft\"] = 8] = \"TopLeft\";\n})(exports.Direction || (exports.Direction = {}));\nvar Direction = exports.Direction;\n/** Computes a point between two points based on fraction between 0 to 1 */\nfunction linearInterpolation(start, end, fraction) {\n    var interpolated = new geometry_1.Point(start.x, start.y);\n    interpolated.x += fraction * (end.x - start.x);\n    interpolated.y += fraction * (end.y - start.y);\n    return interpolated;\n}\nexports.linearInterpolation = linearInterpolation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdXRpbGl0eS9jb21tb24udHM/NzA5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludCB9IGZyb20gJy4uL21vZGVsL2dlb21ldHJ5JztcblxuLyoqIEdpdmVzIHJhZGlhbnMgd2hlbiBtdWx0aXBsaWVkIGJ5IGFuIGFuZ2xlIGluIGRlZ3JlZXMgKi9cbmV4cG9ydCBjb25zdCBEZWdyZWVzVG9SYWRpYW5zPU1hdGguUEkvMTgwO1xuLyoqIEdpdmVzIGRlZ3JlZXMgd2hlbiBtdWx0aXBsaWVkIGJ5IGFuIGFuZ2xlIGluIHJhZGlhbnMgKi9cbmV4cG9ydCBjb25zdCBSYWRpYW5zVG9EZWdyZWVzPTE4MC9NYXRoLlBJO1xuXG4vKiogUmVwcmVzZW50cyBkaXJlY3Rpb24gaW4gYWxsIDggY29ybmVycyAqL1xuZXhwb3J0IGVudW0gRGlyZWN0aW9uey8vZ29pbmcgY2xvY2t3aXNlXG5cdFRvcD0xLFxuXHRUb3BSaWdodCxcblx0UmlnaHQsXG5cdEJvdHRvbVJpZ2h0LFxuXHRCb3R0b20sXG5cdEJvdHRvbUxlZnQsXG5cdExlZnQsXG5cdFRvcExlZnRcbn1cblxuLyoqIENvbXB1dGVzIGEgcG9pbnQgYmV0d2VlbiB0d28gcG9pbnRzIGJhc2VkIG9uIGZyYWN0aW9uIGJldHdlZW4gMCB0byAxICovXG5leHBvcnQgZnVuY3Rpb24gbGluZWFySW50ZXJwb2xhdGlvbihzdGFydDpQb2ludCxlbmQ6UG9pbnQsZnJhY3Rpb246bnVtYmVyKTpQb2ludHtcblx0dmFyIGludGVycG9sYXRlZD1uZXcgUG9pbnQoc3RhcnQueCxzdGFydC55KTtcblx0aW50ZXJwb2xhdGVkLngrPWZyYWN0aW9uKihlbmQueC1zdGFydC54KTtcblx0aW50ZXJwb2xhdGVkLnkrPWZyYWN0aW9uKihlbmQueS1zdGFydC55KTtcblx0cmV0dXJuIGludGVycG9sYXRlZDtcbn1cblxuLyoqXG4gKiAgTW91c2UgaW50ZXJhY3Rpb25zIG9uIHZpZXdzIHRoYXQgaW52b2x2ZSBkcmFnZ2luZyBldmVudCBpbXBsZW1lbnQgdGhpcyBpbnRlcmZhY2VcbiAqICB0byByZWNlaXZlIGNhbGxiYWNrcyBmcm9tIGEgcGFyZW50IGNvbXBvbmVudC4gVGhpcyBpcyBkb25lIHNvIGFzIHRvIG92ZXJjb21lIHRoZVxuICogIHByb2JsZW0gd2hlbiB0aGUgbW91c2UgY3Vyc29yIGdvZXMgb3V0IG9mIHRoZSB0YXJnZXQgdmlldy4gSW1wbGVtZW50b3JzIG5lZWQgdG9cbiAqICBoYW5kbGUgdGhlIG1vdXNlIHByZXNzIGV2ZW50IGFuZCByZWdpdGVyIHRoZW1zZWx2ZXMgdG8gdGhlIGFydGJvYXJkLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFByZXNzRHJhZ1JlbGVhc2VQcm9jZXNzb3J7XG5cdC8qKiBXaWxsIGJlIGZpcmVkIG9uIHRoZSBzdWJjb21wb25lbnQgYWZ0ZXIgdGhlIGZpcnN0IHRpbWUgaXQgaGFzIGJlIHJlZ2lzdGVyZWQgb24gdGhlIGFydGJvYXJkKGZvciB0aGUgaW5pdGlhbCBwcmVzcykuICovXG5cdGhhbmRsZU1vdXNlUHJlc3MoZXZlbnQ6TW91c2VFdmVudCk6dm9pZDtcblx0LyoqIEZpcmVkIHdoZW5ldmVyIHRoZSBtb3VzZSBtb3Zlcywgb24gdGhlIHRhcmdldCB2aWV3IG9yIG9uIHRoZSBhcnRib2FyZCB1bnRpbGwgaXQgaGFzbid0IGJlZSByZWxlYXNlZCAqL1xuXHRoYW5kbGVNb3VzZURyYWcoZXZlbnQ6TW91c2VFdmVudCk6dm9pZDtcblx0LyoqIENhbGxlZCBvbmNlIHRoZSBtb3VzZSBoYXMgYmVlbiByZWxlYXNlZCB3ZXRoZWFyIG9uIG9yIG91dHNpZGUgdGFyZ2V0IHZpZXcgKi9cblx0aGFuZGxlTW91c2VSZWxlYXNlKGV2ZW50Ok1vdXNlRXZlbnQpOnZvaWQ7XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9jbGllbnQvdXRpbGl0eS9jb21tb24udHMiXSwibWFwcGluZ3MiOiI7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 81:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar common_1 = __webpack_require__(80);\nvar geometry_1 = __webpack_require__(66);\nvar RectTrackingPoint = (function () {\n    function RectTrackingPoint(rect) {\n        this.rect = rect;\n        this.side = common_1.Direction.Top;\n        this.fraction = 0;\n    }\n    RectTrackingPoint.prototype.pointOnGeometry = function () {\n        var startPoint;\n        var endPoint;\n        switch (this.side) {\n            case common_1.Direction.Top:\n                startPoint = new geometry_1.Point(this.rect.x, this.rect.y);\n                endPoint = new geometry_1.Point(this.rect.x + this.rect.width, this.rect.y);\n                break;\n            case common_1.Direction.Right:\n                startPoint = new geometry_1.Point(this.rect.x + this.rect.width, this.rect.y);\n                endPoint = new geometry_1.Point(this.rect.x + this.rect.width, this.rect.y + this.rect.height);\n                break;\n            case common_1.Direction.Bottom:\n                startPoint = new geometry_1.Point(this.rect.x + this.rect.width, this.rect.y + this.rect.height);\n                endPoint = new geometry_1.Point(this.rect.x, this.rect.y + this.rect.height);\n                break;\n            case common_1.Direction.Left:\n                startPoint = new geometry_1.Point(this.rect.x, this.rect.y + this.rect.height);\n                endPoint = new geometry_1.Point(this.rect.x, this.rect.y);\n                break;\n            default:\n                console.log(\"Wrong side on rect tracking point\");\n                break;\n        }\n        return common_1.linearInterpolation(startPoint, endPoint, this.fraction);\n    };\n    return RectTrackingPoint;\n}());\nexports.RectTrackingPoint = RectTrackingPoint;\nvar CircleTrackingPoint = (function () {\n    function CircleTrackingPoint() {\n    }\n    CircleTrackingPoint.prototype.pointOnGeometry = function () {\n        return null; //TODO\n    };\n    return CircleTrackingPoint;\n}());\nexports.CircleTrackingPoint = CircleTrackingPoint;\nvar LineSegmentTrackingPoint = (function () {\n    function LineSegmentTrackingPoint() {\n    }\n    LineSegmentTrackingPoint.prototype.pointOnGeometry = function () {\n        return common_1.linearInterpolation(this.lineSegment.start, this.lineSegment.end, this.fraction);\n    };\n    return LineSegmentTrackingPoint;\n}());\nexports.LineSegmentTrackingPoint = LineSegmentTrackingPoint;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvbW9kZWwvdHJhY2tpbmctcG9pbnQudHM/YjgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3Rpb24sbGluZWFySW50ZXJwb2xhdGlvbiB9IGZyb20gJy4uL3V0aWxpdHkvY29tbW9uJztcbmltcG9ydCB7IFBvaW50LFJlY3QsQ2lyY2xlLExpbmVTZWdtZW50IH0gZnJvbSAnLi9nZW9tZXRyeSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhY2tpbmdQb2ludHtcblx0cG9pbnRPbkdlb21ldHJ5KCk6UG9pbnQ7XG59XG5cbmV4cG9ydCBjbGFzcyBSZWN0VHJhY2tpbmdQb2ludCBpbXBsZW1lbnRzIFRyYWNraW5nUG9pbnR7XG5cdFxuXHRyZWN0OlJlY3Q7XG5cdGZyYWN0aW9uOm51bWJlcjtcblx0c2lkZTpEaXJlY3Rpb247Ly9vbmx5IHRvcCxsZWZ0LGJvdHRvbSxyaWdodCBhcHBsaWNhYmxlIGhlcmVcblxuXHRjb25zdHJ1Y3RvcihyZWN0OlJlY3Qpe1xuXHRcdHRoaXMucmVjdD1yZWN0O1xuXHRcdHRoaXMuc2lkZT1EaXJlY3Rpb24uVG9wO1xuXHRcdHRoaXMuZnJhY3Rpb249MDtcblx0fVxuXG5cdHBvaW50T25HZW9tZXRyeSgpOlBvaW50e1x0XHRcblx0XHR2YXIgc3RhcnRQb2ludDpQb2ludDtcblx0XHR2YXIgZW5kUG9pbnQ6UG9pbnQ7XG5cblx0XHRzd2l0Y2godGhpcy5zaWRlKXtcblx0XHRcdGNhc2UgRGlyZWN0aW9uLlRvcDpcblx0XHRcdFx0c3RhcnRQb2ludD1uZXcgUG9pbnQodGhpcy5yZWN0LngsdGhpcy5yZWN0LnkpO1xuXHRcdFx0XHRlbmRQb2ludD1uZXcgUG9pbnQodGhpcy5yZWN0LngrdGhpcy5yZWN0LndpZHRoLHRoaXMucmVjdC55KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIERpcmVjdGlvbi5SaWdodDpcblx0XHRcdFx0c3RhcnRQb2ludD1uZXcgUG9pbnQodGhpcy5yZWN0LngrdGhpcy5yZWN0LndpZHRoLHRoaXMucmVjdC55KTtcblx0XHRcdFx0ZW5kUG9pbnQ9bmV3IFBvaW50KHRoaXMucmVjdC54K3RoaXMucmVjdC53aWR0aCx0aGlzLnJlY3QueSt0aGlzLnJlY3QuaGVpZ2h0KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIERpcmVjdGlvbi5Cb3R0b206XG5cdFx0XHRcdHN0YXJ0UG9pbnQ9bmV3IFBvaW50KHRoaXMucmVjdC54K3RoaXMucmVjdC53aWR0aCx0aGlzLnJlY3QueSt0aGlzLnJlY3QuaGVpZ2h0KTtcblx0XHRcdFx0ZW5kUG9pbnQ9bmV3IFBvaW50KHRoaXMucmVjdC54LHRoaXMucmVjdC55K3RoaXMucmVjdC5oZWlnaHQpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgRGlyZWN0aW9uLkxlZnQ6XG5cdFx0XHRcdHN0YXJ0UG9pbnQ9bmV3IFBvaW50KHRoaXMucmVjdC54LHRoaXMucmVjdC55K3RoaXMucmVjdC5oZWlnaHQpO1xuXHRcdFx0XHRlbmRQb2ludD1uZXcgUG9pbnQodGhpcy5yZWN0LngsdGhpcy5yZWN0LnkpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiV3Jvbmcgc2lkZSBvbiByZWN0IHRyYWNraW5nIHBvaW50XCIpO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cblx0XHRyZXR1cm4gbGluZWFySW50ZXJwb2xhdGlvbihzdGFydFBvaW50LGVuZFBvaW50LHRoaXMuZnJhY3Rpb24pO1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBDaXJjbGVUcmFja2luZ1BvaW50IGltcGxlbWVudHMgVHJhY2tpbmdQb2ludHtcblx0XG5cdGNpcmNsZTpDaXJjbGU7XG5cdGZyYWN0aW9uOm51bWJlcjtcblxuXHRwb2ludE9uR2VvbWV0cnkoKTpQb2ludHtcblx0XHRyZXR1cm4gbnVsbDsvL1RPRE9cblx0fVxufVxuXG5leHBvcnQgY2xhc3MgTGluZVNlZ21lbnRUcmFja2luZ1BvaW50IGltcGxlbWVudHMgVHJhY2tpbmdQb2ludHtcblxuXHRsaW5lU2VnbWVudDpMaW5lU2VnbWVudDtcblx0ZnJhY3Rpb246bnVtYmVyO1xuXG5cdHBvaW50T25HZW9tZXRyeSgpOlBvaW50e1xuXHRcdHJldHVybiBsaW5lYXJJbnRlcnBvbGF0aW9uKHRoaXMubGluZVNlZ21lbnQuc3RhcnQsdGhpcy5saW5lU2VnbWVudC5lbmQsdGhpcy5mcmFjdGlvbik7XG5cdH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vY2xpZW50L21vZGVsL3RyYWNraW5nLXBvaW50LnRzIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQU1BO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBeENBO0FBMENBO0FBQUE7QUFRQTtBQUhBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFSQTtBQVVBO0FBQUE7QUFRQTtBQUhBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFSQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 82:
/***/ function(module, exports) {

	eval("module.exports = \"<div class=\\\"handle-pick\\\"\\n\\t[style.left.px]=\\\"handle.x\\\"\\n\\t[style.top.px]=\\\"handle.y\\\"\\n\\t[style.width.px]=\\\"handle.width\\\"\\n\\t[style.height.px]=\\\"handle.height\\\"\\n\\t[style.cursor]=\\\"cursor\\\"\\n\\t(mousedown)=\\\"requestDragging.emit(this)\\\"\\n\\t></div>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvdmlldy9yZXNpemUtaGFuZGxlLmNvbXBvbmVudC5odG1sPzhhNjAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgY2xhc3M9XFxcImhhbmRsZS1waWNrXFxcIlxcblxcdFtzdHlsZS5sZWZ0LnB4XT1cXFwiaGFuZGxlLnhcXFwiXFxuXFx0W3N0eWxlLnRvcC5weF09XFxcImhhbmRsZS55XFxcIlxcblxcdFtzdHlsZS53aWR0aC5weF09XFxcImhhbmRsZS53aWR0aFxcXCJcXG5cXHRbc3R5bGUuaGVpZ2h0LnB4XT1cXFwiaGFuZGxlLmhlaWdodFxcXCJcXG5cXHRbc3R5bGUuY3Vyc29yXT1cXFwiY3Vyc29yXFxcIlxcblxcdChtb3VzZWRvd24pPVxcXCJyZXF1ZXN0RHJhZ2dpbmcuZW1pdCh0aGlzKVxcXCJcXG5cXHQ+PC9kaXY+XCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jbGllbnQvdmlldy9yZXNpemUtaGFuZGxlLmNvbXBvbmVudC5odG1sXG4vLyBtb2R1bGUgaWQgPSA4MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 83:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = __webpack_require__(3);\nvar FocusDirective = (function () {\n    function FocusDirective(element) {\n        this.element = element;\n    }\n    FocusDirective.prototype.ngOnChanges = function () {\n        this.element.nativeElement.focus();\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], FocusDirective.prototype, \"focus\", void 0);\n    FocusDirective = __decorate([\n        core_1.Directive({\n            selector: '[focus]'\n        }),\n        __param(0, core_1.Inject(core_1.ElementRef)), \n        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n    ], FocusDirective);\n    return FocusDirective;\n    var _a;\n}());\nexports.FocusDirective = FocusDirective;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvZGlyZWN0aXZlL2ZvY3VzLmRpcmVjdGl2ZS50cz8wMmU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbnB1dCwgRWxlbWVudFJlZixJbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbZm9jdXNdJ1xufSlcbmV4cG9ydCBjbGFzcyBGb2N1c0RpcmVjdGl2ZSB7XG4gICAgQElucHV0KClcbiAgICBmb2N1czpib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmKSB7fVxuICAgIHByb3RlY3RlZCBuZ09uQ2hhbmdlcygpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9jbGllbnQvZGlyZWN0aXZlL2ZvY3VzLmRpcmVjdGl2ZS50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBSUE7QUFHQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQUFBOztBQUFBO0FBSkE7QUFBQTtBQUNBO0FBQ0E7QUFJQTs7QUFKQTtBQVFBOztBQUFBO0FBUEE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 84:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar MyRectDirective = (function () {\n    function MyRectDirective(element) {\n        this.element = element;\n        this.background = \"white\";\n        this.strokeColor = 'black';\n        this.strokeWidth = 2;\n        this.strokeStyle = 'solid';\n        this.opacity = 1;\n    }\n    MyRectDirective.prototype.ngOnChanges = function () {\n        this.element.nativeElement.style.position = \"absolute\";\n        this.element.nativeElement.style.left = this.myRect.x + \"px\";\n        this.element.nativeElement.style.top = this.myRect.y + \"px\";\n        this.element.nativeElement.style.width = this.myRect.width + \"px\";\n        this.element.nativeElement.style.height = this.myRect.height + \"px\";\n        this.element.nativeElement.style.background = this.background;\n        this.element.nativeElement.style.borderColor = this.strokeColor;\n        this.element.nativeElement.style.borderWidth = this.strokeWidth + \"px\";\n        this.element.nativeElement.style.borderStyle = this.strokeStyle;\n        this.element.nativeElement.style.opacity = this.opacity;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', (typeof (_a = typeof geometry_1.Rect !== 'undefined' && geometry_1.Rect) === 'function' && _a) || Object)\n    ], MyRectDirective.prototype, \"myRect\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MyRectDirective.prototype, \"background\", void 0);\n    __decorate([\n        core_1.Input('borderColor'), \n        __metadata('design:type', Object)\n    ], MyRectDirective.prototype, \"strokeColor\", void 0);\n    __decorate([\n        core_1.Input('borderWidth'), \n        __metadata('design:type', Object)\n    ], MyRectDirective.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        core_1.Input('borderStyle'), \n        __metadata('design:type', Object)\n    ], MyRectDirective.prototype, \"strokeStyle\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MyRectDirective.prototype, \"opacity\", void 0);\n    MyRectDirective = __decorate([\n        core_1.Directive({\n            selector: '[myRect]'\n        }),\n        __param(0, core_1.Inject(core_1.ElementRef)), \n        __metadata('design:paramtypes', [(typeof (_b = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _b) || Object])\n    ], MyRectDirective);\n    return MyRectDirective;\n    var _a, _b;\n}());\nexports.MyRectDirective = MyRectDirective;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvZGlyZWN0aXZlL215LXJlY3QuZGlyZWN0aXZlLnRzP2ZiMDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmLEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWN0IH0gZnJvbSAnLi4vbW9kZWwvZ2VvbWV0cnknO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tteVJlY3RdJ1xufSlcbmV4cG9ydCBjbGFzcyBNeVJlY3REaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpIG15UmVjdDpSZWN0O1xuXHRASW5wdXQoKSBiYWNrZ3JvdW5kPVwid2hpdGVcIjtcblx0QElucHV0KCdib3JkZXJDb2xvcicpIHN0cm9rZUNvbG9yPSdibGFjayc7XG5cdEBJbnB1dCgnYm9yZGVyV2lkdGgnKSBzdHJva2VXaWR0aD0yO1xuXHRASW5wdXQoJ2JvcmRlclN0eWxlJykgc3Ryb2tlU3R5bGU9J3NvbGlkJztcblx0QElucHV0KCkgb3BhY2l0eT0xO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XG5cdFxuICAgIHByb3RlY3RlZCBuZ09uQ2hhbmdlcygpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiO1xuICAgICAgICB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS5sZWZ0PXRoaXMubXlSZWN0LngrXCJweFwiO1xuICAgICAgICB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS50b3A9dGhpcy5teVJlY3QueStcInB4XCI7XG4gICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLndpZHRoPXRoaXMubXlSZWN0LndpZHRoK1wicHhcIjtcbiAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUuaGVpZ2h0PXRoaXMubXlSZWN0LmhlaWdodCtcInB4XCI7XG5cdFx0dGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZD10aGlzLmJhY2tncm91bmQ7XG5cdFx0dGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUuYm9yZGVyQ29sb3I9dGhpcy5zdHJva2VDb2xvcjtcblx0XHR0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS5ib3JkZXJXaWR0aD10aGlzLnN0cm9rZVdpZHRoK1wicHhcIjtcblx0XHR0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS5ib3JkZXJTdHlsZT10aGlzLnN0cm9rZVN0eWxlO1xuXHRcdHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLm9wYWNpdHk9dGhpcy5vcGFjaXR5O1xuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2NsaWVudC9kaXJlY3RpdmUvbXktcmVjdC5kaXJlY3RpdmUudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBS0E7QUFRQTtBQUFBO0FBTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcEJBO0FBQUE7O0FBQUE7QUFDQTtBQUFBOztBQUFBO0FBQ0E7QUFBQTs7QUFBQTtBQUNBO0FBQUE7O0FBQUE7QUFDQTtBQUFBOztBQUFBO0FBQ0E7QUFBQTs7QUFBQTtBQVRBO0FBQUE7QUFDQTtBQUNBO0FBU0E7O0FBVEE7QUF1QkE7O0FBQUE7QUF0QkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 87:
/***/ function(module, exports) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxyXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcclxuKi9cclxuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgbGlzdCA9IFtdO1xyXG5cclxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXHJcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xyXG5cdFx0dmFyIHJlc3VsdCA9IFtdO1xyXG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGl0ZW0gPSB0aGlzW2ldO1xyXG5cdFx0XHRpZihpdGVtWzJdKSB7XHJcblx0XHRcdFx0cmVzdWx0LnB1c2goXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBpdGVtWzFdICsgXCJ9XCIpO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKGl0ZW1bMV0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gcmVzdWx0LmpvaW4oXCJcIik7XHJcblx0fTtcclxuXHJcblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcclxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XHJcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcclxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xyXG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XHJcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcclxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XHJcblx0XHR9XHJcblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcclxuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxyXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xyXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxyXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxyXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xyXG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcclxuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xyXG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblx0cmV0dXJuIGxpc3Q7XHJcbn07XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gODdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 88:
/***/ function(module, exports, __webpack_require__) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 644:
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * @license Angular v2.4.1\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n     true ? factory(exports, __webpack_require__(3), __webpack_require__(617), __webpack_require__(4), __webpack_require__(5), __webpack_require__(53)) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *  Base class for control directives.\n      * *\n      * Only used internally in the forms module.\n      * *\n     * @abstract\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.errors : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.statusChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.valueChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (this.control)\n                this.control.reset(value);\n        };\n        /**\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        };\n        /**\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.getError(errorCode, path) : null;\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     *  A directive that contains multiple {@link NgControl}s.\n      * *\n      * Only used by the forms module.\n      * *\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             *  Get the form to which this container belongs.\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             *  Get the path to this container.\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     *  Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} condition\n         * @return {?}\n         */\n        ListWrapper.findLast = function (arr, condition) {\n            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n                if (condition(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} list\n         * @param {?} items\n         * @return {?}\n         */\n        ListWrapper.removeAll = function (list, items) {\n            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n                var /** @type {?} */ index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        /**\n         * @param {?} list\n         * @param {?} el\n         * @return {?}\n         */\n        ListWrapper.remove = function (list, el) {\n            var /** @type {?} */ index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        /**\n         * @param {?} list\n         * @return {?}\n         */\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return ((flat)).concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n\n    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isEmptyInputValue(value) {\n        return value == null || typeof value === 'string' && value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var /** @type {?} */ NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var /** @type {?} */ NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     *  Provides a set of validators used by form controls.\n      * *\n      * A validator is a function that processes a {@link FormControl} or collection of\n      * controls and returns a map of errors. A null map means that validation has passed.\n      * *\n      * ### Example\n      * *\n      * ```typescript\n      * var loginControl = new FormControl(\"\", Validators.required)\n      * ```\n      * *\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         *  Validator that requires controls to have a non-empty value.\n         * @param {?} control\n         * @return {?}\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         *  Validator that requires control value to be true.\n         * @param {?} control\n         * @return {?}\n         */\n        Validators.requiredTrue = function (control) {\n            return control.value === true ? null : { 'required': true };\n        };\n        /**\n         *  Validator that requires controls to have a value of a minimum length.\n         * @param {?} minLength\n         * @return {?}\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var /** @type {?} */ length = control.value ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         *  Validator that requires controls to have a value of a maximum length.\n         * @param {?} maxLength\n         * @return {?}\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var /** @type {?} */ length = control.value ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         *  Validator that requires a control to match a regex to its value.\n         * @param {?} pattern\n         * @return {?}\n         */\n        Validators.pattern = function (pattern) {\n            if (!pattern)\n                return Validators.nullValidator;\n            var /** @type {?} */ regex;\n            var /** @type {?} */ regexStr;\n            if (typeof pattern === 'string') {\n                regexStr = \"^\" + pattern + \"$\";\n                regex = new RegExp(regexStr);\n            }\n            else {\n                regexStr = pattern.toString();\n                regex = pattern;\n            }\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var /** @type {?} */ value = control.value;\n                return regex.test(value) ? null :\n                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n            };\n        };\n        /**\n         *  No-op validator.\n         * @param {?} c\n         * @return {?}\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         *  Compose multiple validators into a single function that returns the union\n          * of the individual error maps.\n         * @param {?} validators\n         * @return {?}\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        /**\n         * @param {?} validators\n         * @return {?}\n         */\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var /** @type {?} */ promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    /**\n     * @param {?} control\n     * @param {?} validators\n     * @return {?}\n     */\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    /**\n     * @param {?} control\n     * @param {?} validators\n     * @return {?}\n     */\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    /**\n     * @param {?} arrayOfErrors\n     * @return {?}\n     */\n    function _mergeErrors(arrayOfErrors) {\n        var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var /** @type {?} */ NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var /** @type {?} */ CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true,\n    };\n    /**\n     *  The accessor for writing a value and listening to changes on a checkbox input element.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n      * ```\n      * *\n      * @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return CheckboxControlValueAccessor;\n    }());\n\n    var /** @type {?} */ DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  The default accessor for writing a value and listening to changes that is used by the\n      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"text\" name=\"searchQuery\" ngModel>\n      * ```\n      * *\n      * @stable\n     */\n    var DefaultValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function normalizeValidator(validator) {\n        if (((validator)).validate) {\n            return function (c) { return ((validator)).validate(c); };\n        }\n        else {\n            return (validator);\n        }\n    }\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function normalizeAsyncValidator(validator) {\n        if (((validator)).validate) {\n            return function (c) { return ((validator)).validate(c); };\n        }\n        else {\n            return (validator);\n        }\n    }\n\n    var /** @type {?} */ NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  The accessor for writing a number value and listening to changes that is used by the\n      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"number\" [(ngModel)]=\"age\">\n      * ```\n     */\n    var NumberValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @return {?}\n     */\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     *  A base class that all control directive extend.\n      * It binds a {@link FormControl} object to a DOM element.\n      * *\n      * Used internally by Angular forms.\n      * *\n     * @abstract\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (unimplemented()); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (unimplemented()); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @abstract\n         * @param {?} newValue\n         * @return {?}\n         */\n        NgControl.prototype.viewToModelUpdate = function (newValue) { };\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var /** @type {?} */ RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        /**\n         * @param {?} control\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        /**\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        /**\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        /**\n         * @param {?} controlPair\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = function () { return []; };\n        return RadioControlRegistry;\n    }());\n    /**\n     *  *\n      * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n      * to keep the view synced with the {@link FormControl} model.\n      * *\n      * *\n      * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n      * value accessor will be active on any radio control that has a form directive. You do\n      * **not** need to add a special selector to activate it.\n      * *\n      * ### How to use radio buttons with form directives\n      * *\n      * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n      * in the same group have the same `name` attribute.  Radio buttons with different `name`\n      * attributes do not affect each other.\n      * *\n      * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n      * *\n      * When using radio buttons in a reactive form, radio buttons in the same group should have the\n      * same `formControlName`. You can also add a `name` attribute, but it's optional.\n      * *\n      * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * @stable\n     */\n    var RadioControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         * @param {?} _registry\n         * @param {?} _injector\n         */\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ]; };\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var /** @type {?} */ RANGE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  The accessor for writing a range value and listening to changes that is used by the\n      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"range\" [(ngModel)]=\"age\" >\n      * ```\n     */\n    var RangeValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function RangeValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RangeValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [RANGE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RangeValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return RangeValueAccessor;\n    }());\n\n    var /** @type {?} */ SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @return {?}\n     */\n    function _buildValueString(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    /**\n     * @param {?} valueString\n     * @return {?}\n     */\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     *  *\n      * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n      * to keep the view synced with the {@link FormControl} model.\n      * *\n      * *\n      * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n      * value accessor will be active on any select control that has a form directive. You do\n      * **not** need to add a special selector to activate it.\n      * *\n      * ### How to use select controls with form directives\n      * *\n      * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n      * attribute to the main `<select>` tag.\n      * *\n      * If your option values are simple strings, you can bind to the normal `value` property\n      * on the option.  If your option values happen to be objects (and you'd like to save the\n      * selection in your form as an object), use `ngValue` instead:\n      * *\n      * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n      * *\n      * In reactive forms, you'll also want to add your form directive (`formControlName` or\n      * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n      * choice of binding to the  `value` or `ngValue` property on the select's options.\n      * *\n      * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n      * *\n      * Note: We listen to the 'change' event because 'input' events aren't fired\n      * for selects in Firefox and IE:\n      * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n      * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var SelectControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var /** @type {?} */ valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /**\n         * @param {?} valueString\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var /** @type {?} */ id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return SelectControlValueAccessor;\n    }());\n    /**\n     *  *\n      * *\n      * See docs for {@link SelectControlValueAccessor} for usage examples.\n      * *\n     */\n    var NgSelectOption = (function () {\n        /**\n         * @param {?} _element\n         * @param {?} _renderer\n         * @param {?} _select\n         */\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._setElementValue(value);\n                if (this._select)\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = function () { return [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ]; };\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @return {?}\n     */\n    function _buildValueString$1(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    /**\n     * @param {?} valueString\n     * @return {?}\n     */\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     *  The accessor for writing a value and listening to changes on a select element.\n      * *\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            var /** @type {?} */ optionSelectedStateSetter;\n            if (Array.isArray(value)) {\n                // convert values to ids\n                var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n                optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n            }\n            else {\n                optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n            }\n            this._optionMap.forEach(optionSelectedStateSetter);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var /** @type {?} */ selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var /** @type {?} */ options = _.selectedOptions;\n                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                        var /** @type {?} */ opt = options.item(i);\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var /** @type {?} */ options = (_.options);\n                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                        var /** @type {?} */ opt = options.item(i);\n                        if (opt.selected) {\n                            var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                _this.value = selected;\n                fn(selected);\n            };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var /** @type {?} */ id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /**\n         * @param {?} valueString\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var /** @type {?} */ id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     *  Marks `<option>` as dynamic, so Angular can be notified when options change.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <select multiple name=\"city\" ngModel>\n      * <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n      * </select>\n      * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        /**\n         * @param {?} _element\n         * @param {?} _renderer\n         * @param {?} _select\n         */\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = function () { return [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ]; };\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @return {?}\n     */\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (((validator)).registerOnValidatorChange)\n                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (((validator)).registerOnValidatorChange)\n                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        if (control)\n            control._clearChangeFns();\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    /**\n     * @param {?} dir\n     * @param {?} message\n     * @return {?}\n     */\n    function _throwError(dir, message) {\n        var /** @type {?} */ messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    /**\n     * @param {?} changes\n     * @param {?} viewModel\n     * @return {?}\n     */\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var /** @type {?} */ change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var /** @type {?} */ BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        RangeValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    /**\n     * @param {?} valueAccessor\n     * @return {?}\n     */\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    /**\n     * @param {?} dir\n     * @param {?} valueAccessors\n     * @return {?}\n     */\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var /** @type {?} */ defaultAccessor;\n        var /** @type {?} */ builtinAccessor;\n        var /** @type {?} */ customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     *  This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n      * *\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             *  Get the {@link FormGroup} backing this binding.\n             * @return {?}\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             *  Get the path to this control group.\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             *  Get the {@link Form} to which this group belongs.\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        /**\n         * @param {?} cd\n         */\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var /** @type {?} */ ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid',\n        '[class.ng-pending]': 'ngClassPending',\n    };\n    /**\n     *  Directive automatically applied to Angular form controls that sets CSS classes\n      * based on control status (valid/invalid/dirty/etc).\n      * *\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        /**\n         * @param {?} cd\n         */\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = function () { return [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ]; };\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     *  Directive automatically applied to Angular form groups that sets CSS classes\n      * based on control status (valid/invalid/dirty/etc).\n      * *\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        /**\n         * @param {?} cd\n         */\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ]; };\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     *  Use by directives and components to emit custom Events.\n      * *\n      * ### Examples\n      * *\n      * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n      * title gets clicked:\n      * *\n      * ```\n      * selector: 'zippy',\n      * template: `\n      * <div class=\"zippy\">\n      * <div (click)=\"toggle()\">Toggle</div>\n      * <div [hidden]=\"!visible\">\n      * <ng-content></ng-content>\n      * </div>\n      * </div>`})\n      * export class Zippy {\n      * visible: boolean = true;\n      * @Output() open: EventEmitter<any> = new EventEmitter();\n      * @Output() close: EventEmitter<any> = new EventEmitter();\n      * *\n      * toggle() {\n      * this.visible = !this.visible;\n      * if (this.visible) {\n      * this.open.emit(null);\n      * } else {\n      * this.close.emit(null);\n      * }\n      * }\n      * }\n      * ```\n      * *\n      * The events payload can be accessed by the parameter `$event` on the components output event\n      * handler:\n      * *\n      * ```\n      * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n      * ```\n      * *\n      * Uses Rx.Observable but provides an adapter to make it work as specified here:\n      * https://github.com/jhusain/observable-spec\n      * *\n      * Once a reference implementation of the spec is available, switch to it.\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         *  Creates an instance of [EventEmitter], which depending on [isAsync],\n          * delivers events synchronously or asynchronously.\n         * @param {?=} isAsync\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * @param {?=} generatorOrNext\n         * @param {?=} error\n         * @param {?=} complete\n         * @return {?}\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var /** @type {?} */ schedulerFn;\n            var /** @type {?} */ errorFn = function (err) { return null; };\n            var /** @type {?} */ completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var /** @type {?} */ VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var /** @type {?} */ INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var /** @type {?} */ PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var /** @type {?} */ DISABLED = 'DISABLED';\n    /**\n     * @param {?} control\n     * @param {?} path\n     * @param {?} delimiter\n     * @return {?}\n     */\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = ((path)).split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return ((path)).reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(/** @type {?} */ (name)) || null;\n            }\n            return null;\n        }, control);\n    }\n    /**\n     * @param {?} r\n     * @return {?}\n     */\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    /**\n     * @param {?} asyncValidator\n     * @return {?}\n     */\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     *  {@link FormArray}.\n      * *\n      * It provides some of the shared behavior that all controls and groups of controls have, like\n      * running validators, calculating status, and resetting state. It also defines the properties\n      * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n      * instantiated directly.\n      * *\n     * @abstract\n     */\n    var AbstractControl = (function () {\n        /**\n         * @param {?} validator\n         * @param {?} asyncValidator\n         */\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             *  The value of the control.\n             * @return {?}\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n            /**\n             *  The parent control.\n             * @return {?}\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             *  The validation status of the control. There are four possible\n              * validation statuses:\n              * *\n              * * **VALID**:  control has passed all validation checks\n              * * **INVALID**: control has failed at least one validation check\n              * * **PENDING**: control is in the midst of conducting a validation check\n              * * **DISABLED**: control is exempt from validation checks\n              * *\n              * These statuses are mutually exclusive, so a control cannot be\n              * both valid AND invalid or invalid AND disabled.\n             * @return {?}\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             *  A control is `valid` when its `status === VALID`.\n              * *\n              * In order to have this status, the control must have passed all its\n              * validation checks.\n             * @return {?}\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             *  A control is `invalid` when its `status === INVALID`.\n              * *\n              * In order to have this status, the control must have failed\n              * at least one of its validation checks.\n             * @return {?}\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             *  A control is `pending` when its `status === PENDING`.\n              * *\n              * In order to have this status, the control must be in the\n              * middle of conducting a validation check.\n             * @return {?}\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             *  A control is `disabled` when its `status === DISABLED`.\n              * *\n              * Disabled controls are exempt from validation checks and\n              * are not included in the aggregate value of their ancestor\n              * controls.\n             * @return {?}\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             *  A control is `enabled` as long as its `status !== DISABLED`.\n              * *\n              * In other words, it has a status of `VALID`, `INVALID`, or\n              * `PENDING`.\n             * @return {?}\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             *  Returns any errors generated by failing validation. If there\n              * are no errors, it will return null.\n             * @return {?}\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             *  A control is `pristine` if the user has not yet changed\n              * the value in the UI.\n              * *\n              * Note that programmatic changes to a control's value will\n              * *not* mark it dirty.\n             * @return {?}\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             *  A control is `dirty` if the user has changed the value\n              * in the UI.\n              * *\n              * Note that programmatic changes to a control's value will\n              * *not* mark it dirty.\n             * @return {?}\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n             *  A control is marked `touched` once the user has triggered\n              * a `blur` event on it.\n             * @return {?}\n             */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             *  A control is `untouched` if the user has not yet triggered\n              * a `blur` event on it.\n             * @return {?}\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             *  Emits an event every time the value of the control changes, in\n              * the UI or programmatically.\n             * @return {?}\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             *  Emits an event every time the validation status of the control\n              * is re-calculated.\n             * @return {?}\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the synchronous validators that are active on this control.  Calling\n          * this will overwrite any existing sync validators.\n         * @param {?} newValidator\n         * @return {?}\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         *  Sets the async validators that are active on this control. Calling this\n          * will overwrite any existing async validators.\n         * @param {?} newValidator\n         * @return {?}\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         *  Empties out the sync validator list.\n         * @return {?}\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         *  Empties out the async validator list.\n         * @return {?}\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         *  Marks the control as `touched`.\n          * *\n          * This will also mark all direct ancestors as `touched` to maintain\n          * the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `untouched`.\n          * *\n          * If the control has any children, it will also mark all children as `untouched`\n          * to maintain the model, and re-calculate the `touched` status of all parent\n          * controls.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `dirty`.\n          * *\n          * This will also mark all direct ancestors as `dirty` to maintain\n          * the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `pristine`.\n          * *\n          * If the control has any children, it will also mark all children as `pristine`\n          * to maintain the model, and re-calculate the `pristine` status of all parent\n          * controls.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `pending`.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Disables the control. This means the control will be exempt from validation checks and\n          * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n          * *\n          * If the control has children, all children will be disabled to maintain the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         *  Enables the control. This means the control will be included in validation checks and\n          * the aggregate value of its parent. Its status is re-calculated based on its value and\n          * its validators.\n          * *\n          * If the control has children, all children will be enabled.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        /**\n         * @param {?} onlySelf\n         * @return {?}\n         */\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        /**\n         * @param {?} parent\n         * @return {?}\n         */\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         *  Sets the value of the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.setValue = function (value, options) { };\n        /**\n         *  Patches the value of the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.patchValue = function (value, options) { };\n        /**\n         *  Resets the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?=} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.reset = function (value, options) { };\n        /**\n         *  Re-calculates the value and validation status of the control.\n          * *\n          * By default, it will also update the value and validity of its ancestors.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        /**\n         * @param {?} emitEvent\n         * @return {?}\n         */\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         *  Sets errors on a form control.\n          * *\n          * This is used when validations are run manually by the user, rather than automatically.\n          * *\n          * Calling `setErrors` will also update the validity of the parent control.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const login = new FormControl(\"someLogin\");\n          * login.setErrors({\n          * \"notUnique\": true\n          * });\n          * *\n          * expect(login.valid).toEqual(false);\n          * expect(login.errors).toEqual({\"notUnique\": true});\n          * *\n          * login.setValue(\"someOtherLogin\");\n          * *\n          * expect(login.valid).toEqual(true);\n          * ```\n         * @param {?} errors\n         * @param {?=} __1\n         * @return {?}\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         *  Retrieves a child control given the control's name or path.\n          * *\n          * Paths can be passed in as an array or a string delimited by a dot.\n          * *\n          * To get a control nested within a `person` sub-group:\n          * *\n          * * `this.form.get('person.name');`\n          * *\n          * -OR-\n          * *\n          * * `this.form.get(['person', 'name']);`\n         * @param {?} path\n         * @return {?}\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         *  Returns true if the control with the given path has the error specified. Otherwise\n          * returns null or undefined.\n          * *\n          * If no path is given, it checks for the error on the present control.\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var /** @type {?} */ control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         *  Returns true if the control with the given path has the error specified. Otherwise\n          * returns false.\n          * *\n          * If no path is given, it checks for the error on the present control.\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             *  Retrieves the top-level ancestor of this control.\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} emitEvent\n         * @return {?}\n         */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AbstractControl.prototype._updateValue = function () { };\n        /**\n         * @abstract\n         * @param {?} cb\n         * @return {?}\n         */\n        AbstractControl.prototype._forEachChild = function (cb) { };\n        /**\n         * @abstract\n         * @param {?} condition\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControls = function (condition) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AbstractControl.prototype._allControlsDisabled = function () { };\n        /**\n         * @param {?} status\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * @param {?} formState\n         * @return {?}\n         */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     *  *\n      * It is one of the three fundamental building blocks of Angular forms, along with\n      * {@link FormGroup} and {@link FormArray}.\n      * *\n      * *\n      * When instantiating a {@link FormControl}, you can pass in an initial value as the\n      * first argument. Example:\n      * *\n      * ```ts\n      * const ctrl = new FormControl('some value');\n      * console.log(ctrl.value);     // 'some value'\n      * *```\n      * *\n      * You can also initialize the control with a form state object on instantiation,\n      * which includes both the value and whether or not the control is disabled.\n      * You can't use the value key without the disabled key; both are required\n      * to use this way of initialization.\n      * *\n      * ```ts\n      * const ctrl = new FormControl({value: 'n/a', disabled: true});\n      * console.log(ctrl.value);     // 'n/a'\n      * console.log(ctrl.status);   // 'DISABLED'\n      * ```\n      * *\n      * To include a sync validator (or an array of sync validators) with the control,\n      * pass it in as the second argument. Async validators are also supported, but\n      * have to be passed in separately as the third arg.\n      * *\n      * ```ts\n      * const ctrl = new FormControl('', Validators.required);\n      * console.log(ctrl.value);     // ''\n      * console.log(ctrl.status);   // 'INVALID'\n      * ```\n      * *\n      * See its superclass, {@link AbstractControl}, for more properties and methods.\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        /**\n         * @param {?=} formState\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         *  Set the value of the form control to `value`.\n          * *\n          * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n          * and not its parent component. This defaults to false.\n          * *\n          * If `emitEvent` is `true`, this\n          * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n          * to true (as it falls through to `updateValueAndValidity`).\n          * *\n          * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n          * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n          * specified.\n          * *\n          * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n          * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of a control.\n          * *\n          * This function is functionally the same as {@link FormControl.setValue} at this level.\n          * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n          * where it does behave differently.\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         *  Resets the form control. This means by default:\n          * *\n          * * it is marked as `pristine`\n          * * it is marked as `untouched`\n          * * value is set to null\n          * *\n          * You can also reset to a specific form state by passing through a standalone\n          * value or a form state object that contains both a value and a disabled state\n          * (these are the only two properties that cannot be calculated).\n          * *\n          * Ex:\n          * *\n          * ```ts\n          * this.control.reset('Nancy');\n          * *\n          * console.log(this.control.value);  // 'Nancy'\n          * ```\n          * *\n          * OR\n          * *\n          * ```\n          * this.control.reset({value: 'Nancy', disabled: true});\n          * *\n          * console.log(this.control.value);  // 'Nancy'\n          * console.log(this.control.status);  // 'DISABLED'\n          * ```\n         * @param {?=} formState\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * @return {?}\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @return {?}\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         *  Register a listener for change events.\n         * @param {?} fn\n         * @return {?}\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @return {?}\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         *  Register a listener for disabled events.\n         * @param {?} fn\n         * @return {?}\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        /**\n         * @param {?} formState\n         * @return {?}\n         */\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     *  instances.\n      * *\n      * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n      * with each control name as the key.  It calculates its status by reducing the statuses\n      * of its children. For example, if one of the controls in a group is invalid, the entire\n      * group becomes invalid.\n      * *\n      * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n      * along with {@link FormControl} and {@link FormArray}.\n      * *\n      * *\n      * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n      * argument. The key for each child will be the name under which it is registered.\n      * *\n      * ### Example\n      * *\n      * ```\n      * const form = new FormGroup({\n      * first: new FormControl('Nancy', Validators.minLength(2)),\n      * last: new FormControl('Drew'),\n      * });\n      * *\n      * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n      * console.log(form.status);  // 'VALID'\n      * ```\n      * *\n      * You can also include group-level validators as the second arg, or group-level async\n      * validators as the third arg. These come in handy when you want to perform validation\n      * that considers the value of more than one child control.\n      * *\n      * ### Example\n      * *\n      * ```\n      * const form = new FormGroup({\n      * password: new FormControl('', Validators.minLength(2)),\n      * passwordConfirm: new FormControl('', Validators.minLength(2)),\n      * }, passwordMatchValidator);\n      * *\n      * *\n      * function passwordMatchValidator(g: FormGroup) {\n      * return g.get('password').value === g.get('passwordConfirm').value\n      * ? null : {'mismatch': true};\n      * }\n      * ```\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        /**\n         * @param {?} controls\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         *  Registers a control with the group's list of controls.\n          * *\n          * This method does not update value or validity of the control, so for\n          * most cases you'll want to use {@link FormGroup.addControl} instead.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         *  Add a control to this group.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Remove a control from this group.\n         * @param {?} name\n         * @return {?}\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Replace an existing control.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Check whether there is an enabled control with the given name in the group.\n          * *\n          * It will return false for disabled controls. If you'd like to check for\n          * existence in the group only, use {@link AbstractControl.get} instead.\n         * @param {?} controlName\n         * @return {?}\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n          * the structure of the group, with control names as keys.\n          * *\n          * This method performs strict checks, so it will throw an error if you try\n          * to set the value of a control that doesn't exist or if you exclude the\n          * value of a control.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const form = new FormGroup({\n          * first: new FormControl(),\n          * last: new FormControl()\n          * });\n          * console.log(form.value);   // {first: null, last: null}\n          * *\n          * form.setValue({first: 'Nancy', last: 'Drew'});\n          * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n          * *\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n          * names as keys, and will do its best to match the values to the correct controls\n          * in the group.\n          * *\n          * It accepts both super-sets and sub-sets of the group without throwing an error.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const form = new FormGroup({\n          * first: new FormControl(),\n          * last: new FormControl()\n          * });\n          * console.log(form.value);   // {first: null, last: null}\n          * *\n          * form.patchValue({first: 'Nancy'});\n          * console.log(form.value);   // {first: 'Nancy', last: null}\n          * *\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Resets the {@link FormGroup}. This means by default:\n          * *\n          * * The group and all descendants are marked `pristine`\n          * * The group and all descendants are marked `untouched`\n          * * The value of all descendants will be null or null maps\n          * *\n          * You can also reset to a specific form state by passing in a map of states\n          * that matches the structure of your form, with control names as keys. The state\n          * can be a standalone value or a form state object with both a value and a disabled\n          * status.\n          * *\n          * ### Example\n          * *\n          * ```ts\n          * this.form.reset({first: 'name', last: 'last name'});\n          * *\n          * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n          * ```\n          * *\n          * - OR -\n          * *\n          * ```\n          * this.form.reset({\n          * first: {value: 'name', disabled: true},\n          * last: 'last'\n          * });\n          * *\n          * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n          * console.log(this.form.get('first').status);  // 'DISABLED'\n          * ```\n         * @param {?=} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         *  The aggregate value of the {@link FormGroup}, including any disabled controls.\n          * *\n          * If you'd like to include all values regardless of disabled status, use this method.\n          * Otherwise, the `value` property is the best way to get the value of the group.\n         * @return {?}\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var /** @type {?} */ res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /**\n         * @param {?} initValue\n         * @param {?} fn\n         * @return {?}\n         */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var /** @type {?} */ res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     *  instances.\n      * *\n      * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n      * It calculates its status by reducing the statuses of its children. For example, if one of\n      * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n      * *\n      * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n      * along with {@link FormControl} and {@link FormGroup}.\n      * *\n      * *\n      * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n      * argument.\n      * *\n      * ### Example\n      * *\n      * ```\n      * const arr = new FormArray([\n      * new FormControl('Nancy', Validators.minLength(2)),\n      * new FormControl('Drew'),\n      * ]);\n      * *\n      * console.log(arr.value);   // ['Nancy', 'Drew']\n      * console.log(arr.status);  // 'VALID'\n      * ```\n      * *\n      * You can also include array-level validators as the second arg, or array-level async\n      * validators as the third arg. These come in handy when you want to perform validation\n      * that considers the value of more than one child control.\n      * *\n      * ### Adding or removing controls\n      * *\n      * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n      * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n      * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n      * the `FormArray` directly, as that will result in strange and unexpected behavior such\n      * as broken change detection.\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        /**\n         * @param {?} controls\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         *  Get the {@link AbstractControl} at the given `index` in the array.\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         *  Insert a new {@link AbstractControl} at the end of the array.\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Insert a new {@link AbstractControl} at the given `index` in the array.\n         * @param {?} index\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Remove the control at the given `index` in the array.\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Replace an existing control.\n         * @param {?} index\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             *  Length of the control array.\n             * @return {?}\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n          * the structure of the control.\n          * *\n          * This method performs strict checks, so it will throw an error if you try\n          * to set the value of a control that doesn't exist or if you exclude the\n          * value of a control.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const arr = new FormArray([\n          * new FormControl(),\n          * new FormControl()\n          * ]);\n          * console.log(arr.value);   // [null, null]\n          * *\n          * arr.setValue(['Nancy', 'Drew']);\n          * console.log(arr.value);   // ['Nancy', 'Drew']\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n          * structure of the control, and will do its best to match the values to the correct\n          * controls in the group.\n          * *\n          * It accepts both super-sets and sub-sets of the array without throwing an error.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const arr = new FormArray([\n          * new FormControl(),\n          * new FormControl()\n          * ]);\n          * console.log(arr.value);   // [null, null]\n          * *\n          * arr.patchValue(['Nancy']);\n          * console.log(arr.value);   // ['Nancy', null]\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Resets the {@link FormArray}. This means by default:\n          * *\n          * * The array and all descendants are marked `pristine`\n          * * The array and all descendants are marked `untouched`\n          * * The value of all descendants will be null or null maps\n          * *\n          * You can also reset to a specific form state by passing in an array of states\n          * that matches the structure of the control. The state can be a standalone value\n          * or a form state object with both a value and a disabled status.\n          * *\n          * ### Example\n          * *\n          * ```ts\n          * this.arr.reset(['name', 'last name']);\n          * *\n          * console.log(this.arr.value);  // ['name', 'last name']\n          * ```\n          * *\n          * - OR -\n          * *\n          * ```\n          * this.arr.reset([\n          * {value: 'name', disabled: true},\n          * 'last'\n          * ]);\n          * *\n          * console.log(this.arr.value);  // ['name', 'last name']\n          * console.log(this.arr.get(0).status);  // 'DISABLED'\n          * ```\n         * @param {?=} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         *  The aggregate value of the array, including any disabled controls.\n          * *\n          * If you'd like to include all values regardless of disabled status, use this method.\n          * Otherwise, the `value` property is the best way to get the value of the array.\n         * @return {?}\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /**\n         * @return {?}\n         */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /**\n         * @return {?}\n         */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /**\n         * @return {?}\n         */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        /**\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var /** @type {?} */ resolvedPromise = Promise.resolve(null);\n    /**\n     *  to track aggregate form value and validation status.\n      * *\n      * *\n      * As soon as you import the `FormsModule`, this directive becomes active by default on\n      * all `<form>` tags.  You don't need to add a special selector.\n      * *\n      * You can export the directive into a local template variable using `ngForm` as the key\n      * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n      * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n      * will give you access to the aggregate value and validity status of the form, as well as\n      * user interaction properties like `dirty` and `touched`.\n      * *\n      * To register child controls with the form, you'll want to use {@link NgModel} with a\n      * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n      * sub-groups within the form.\n      * *\n      * You can listen to the directive's `ngSubmit` event to be notified when the user has\n      * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n      * submission event.\n      * *\n      * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `FormsModule`\n      * *\n      * @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        /**\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                dir._control = (container.registerControl(dir.name, dir.control));\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                var /** @type {?} */ group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @param {?} value\n         * @return {?}\n         */\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n                ctrl.setValue(value);\n            });\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? (this.form.get(path)) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     *  *\n      * *\n      * This directive can only be used as a child of {@link NgForm} (or in other words,\n      * within `<form>` tags).\n      * *\n      * Use this directive if you'd like to create a sub-group within a form. This can\n      * come in handy if you want to validate a sub-group of your form separately from\n      * the rest of your form, or if some values in your domain model make more sense to\n      * consume together in a nested object.\n      * *\n      * Pass in the name you'd like this sub-group to have and it will become the key\n      * for the sub-group in the form's full value. You can also export the directive into\n      * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n      * *\n      * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `FormsModule`\n      * *\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    /**\n     * `ngModel` forces an additional change detection run when its inputs change:\n     * E.g.:\n     * ```\n     * <div>{{myModel.valid}}</div>\n     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n     * ```\n     * I.e. `ngModel` can export itself on the element and then be used in the template.\n     * Normally, this would result in expressions before the `input` that use the exported directive\n     * to have and old value as they have been\n     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n     * detection run.\n     *\n     * Notes:\n     * - this is just one extra run no matter how many `ngModel` have been changed.\n     * - this is a general problem when using `exportAs` for directives!\n     */\n    var /** @type {?} */ resolvedPromise$1 = Promise.resolve(null);\n    /**\n     *  to a form control element.\n      * *\n      * The {@link FormControl} instance will track the value, user interaction, and\n      * validation status of the control and keep the view synced with the model. If used\n      * within a parent form, the directive will also register itself with the form as a child\n      * control.\n      * *\n      * *\n      * This directive can be used by itself or as part of a larger form. All you need is the\n      * `ngModel` selector to activate it.\n      * *\n      * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n      * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n      * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n      * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n      * the domain model in your class as well.\n      * *\n      * If you wish to inspect the properties of the associated {@link FormControl} (like\n      * validity state), you can also export the directive into a local template variable using\n      * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n      * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n      * will fall through to the control anyway, so you can access them directly. You can see a\n      * full list of properties directly available in {@link AbstractControlDirective}.\n      * *\n      * The following is an example of a simple standalone control using `ngModel`:\n      * *\n      * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n      * *\n      * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n      * so that the control can be registered with the parent form under that name.\n      * *\n      * It's worth noting that in the context of a parent form, you often can skip one-way or\n      * two-way binding because the parent form will sync the value for you. You can access\n      * its properties by exporting it into a local template variable using `ngForm` (ex:\n      * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n      * *\n      * If you do need to populate initial values into your form, using a one-way binding for\n      * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n      * than the domain model's value on submit.\n      * *\n      * Take a look at an example of using `ngModel` within a form:\n      * *\n      * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n      * *\n      * To see `ngModel` examples with different form control types, see:\n      * *\n      * * Radio buttons: {@link RadioControlValueAccessor}\n      * * Selects: {@link SelectControlValueAccessor}\n      * *\n      * **npm package**: `@angular/forms`\n      * *\n      * **NgModule**: `FormsModule`\n      * *\n      * @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n            var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     *  *\n      * In other words, this directive ensures that any values written to the {@link FormControl}\n      * instance programmatically will be written to the DOM element (model -> view). Conversely,\n      * any values written to the DOM element through user input will be reflected in the\n      * {@link FormControl} instance (view -> model).\n      * *\n      * *\n      * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n      * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n      * {@link FormControlDirective}.\n      * *\n      * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n      * it does not require that your {@link FormControl} instance be part of any parent\n      * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n      * exists above it.\n      * *\n      * **Get the value**: the `value` property is always synced and available on the\n      * {@link FormControl} instance. See a full list of available properties in\n      * {@link AbstractControl}.\n      * *\n      * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n      * or you can set it programmatically later using {@link AbstractControl.setValue} or\n      * {@link AbstractControl.patchValue}.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the control, you can\n      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n      * re-calculated.\n      * *\n      * ### Example\n      * *\n      * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `ReactiveFormsModule`\n      * *\n      * @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        /**\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            /**\n             * @param {?} isDisabled\n             * @return {?}\n             */\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     *  *\n      * *\n      * This directive accepts an existing {@link FormGroup} instance. It will then use this\n      * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n      * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n      * and {@link FormArrayName} directives.\n      * *\n      * **Set value**: You can set the form's initial value when instantiating the\n      * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n      * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n      * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n      * re-calculated.\n      * *\n      * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n      * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n      * submission event.\n      * *\n      * ### Example\n      * *\n      * In this example, we create form controls for first name and last name.\n      * *\n      * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n      * *\n      * **npm package**: `@angular/forms`\n      * *\n      * **NgModule**: {@link ReactiveFormsModule}\n      * *\n      * @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        /**\n         * @param {?} _validators\n         * @param {?} _asyncValidators\n         */\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @param {?} value\n         * @return {?}\n         */\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var /** @type {?} */ ctrl = (this.form.get(dir.path));\n            ctrl.setValue(value);\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateValidators = function () {\n            var /** @type {?} */ sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     *  *\n      * *\n      * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n      * `[formGroup]`).\n      * *\n      * It accepts the string name of the nested {@link FormGroup} you want to link, and\n      * will look for a {@link FormGroup} registered with that name in the parent\n      * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n      * *\n      * Nested form groups can come in handy when you want to validate a sub-group of a\n      * form separately from the rest or when you'd like to group the values of certain\n      * controls into their own nested object.\n      * *\n      * **Access the group**: You can access the associated {@link FormGroup} using the\n      * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n      * *\n      * You can also access individual controls within the group using dot syntax.\n      * Ex: `this.form.get('name.first')`\n      * *\n      * **Get the value**: the `value` property is always synced and available on the\n      * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n      * *\n      * **Set the value**: You can set an initial value for each child control when instantiating\n      * the {@link FormGroup}, or you can set it programmatically later using\n      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the group, you can\n      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n      * re-calculated.\n      * *\n      * ### Example\n      * *\n      * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `ReactiveFormsModule`\n      * *\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var /** @type {?} */ formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     *  *\n      * *\n      * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n      * `[formGroup]`).\n      * *\n      * It accepts the string name of the nested {@link FormArray} you want to link, and\n      * will look for a {@link FormArray} registered with that name in the parent\n      * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n      * *\n      * Nested form arrays can come in handy when you have a group of form controls but\n      * you're not sure how many there will be. Form arrays allow you to create new\n      * form controls dynamically.\n      * *\n      * **Access the array**: You can access the associated {@link FormArray} using the\n      * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n      * Ex: `this.form.get('cities')`.\n      * *\n      * **Get the value**: the `value` property is always synced and available on the\n      * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n      * *\n      * **Set the value**: You can set an initial value for each child control when instantiating\n      * the {@link FormArray}, or you can set the value programmatically later using the\n      * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n      * methods.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the array, you can\n      * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n      * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n      * status is re-calculated.\n      * *\n      * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n      * calling its {@link FormArray.push} method.\n      * Ex: `this.form.get('cities').push(new FormControl());`\n      * *\n      * ### Example\n      * *\n      * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `ReactiveFormsModule`\n      * *\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._parent ? (this._parent.formDirective) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     *  element by name.\n      * *\n      * In other words, this directive ensures that any values written to the {@link FormControl}\n      * instance programmatically will be written to the DOM element (model -> view). Conversely,\n      * any values written to the DOM element through user input will be reflected in the\n      * {@link FormControl} instance (view -> model).\n      * *\n      * *\n      * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n      * `[formGroup]`).\n      * *\n      * It accepts the string name of the {@link FormControl} instance you want to\n      * link, and will look for a {@link FormControl} registered with that name in the\n      * closest {@link FormGroup} or {@link FormArray} above it.\n      * *\n      * **Access the control**: You can access the {@link FormControl} associated with\n      * this directive by using the {@link AbstractControl.get} method.\n      * Ex: `this.form.get('first');`\n      * *\n      * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n      * See a full list of available properties in {@link AbstractControl}.\n      * *\n      * **Set value**: You can set an initial value for the control when instantiating the\n      * {@link FormControl}, or you can set it programmatically later using\n      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the control, you can\n      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n      * re-calculated.\n      * *\n      * ### Example\n      * *\n      * In this example, we create form controls for first name and last name.\n      * *\n      * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n      * *\n      * To see `formControlName` examples with different form control types, see:\n      * *\n      * * Radio buttons: {@link RadioControlValueAccessor}\n      * * Selects: {@link SelectControlValueAccessor}\n      * *\n      * **npm package**: `@angular/forms`\n      * *\n      * **NgModule**: {@link ReactiveFormsModule}\n      * *\n      * @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            /**\n             * @param {?} isDisabled\n             * @return {?}\n             */\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    var /** @type {?} */ CHECKBOX_REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxRequiredValidator; }),\n        multi: true\n    };\n    /**\n     *  A Directive that adds the `required` validator to any controls marked with the\n      * `required` attribute, via the {@link NG_VALIDATORS} binding.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <input name=\"fullName\" ngModel required>\n      * ```\n      * *\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._required; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._required = value != null && value !== false && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = function () { return []; };\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     *  A Directive that adds the `required` validator to checkbox controls marked with the\n      * `required` attribute, via the {@link NG_VALIDATORS} binding.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <input type=\"checkbox\" name=\"active\" ngModel required>\n      * ```\n      * *\n     */\n    var CheckboxRequiredValidator = (function (_super) {\n        __extends$13(CheckboxRequiredValidator, _super);\n        function CheckboxRequiredValidator() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        CheckboxRequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.requiredTrue(c) : null;\n        };\n        CheckboxRequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                        providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxRequiredValidator.ctorParameters = function () { return []; };\n        return CheckboxRequiredValidator;\n    }(RequiredValidator));\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var /** @type {?} */ MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     *  A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n      * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n      * *\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        MinLengthValidator.prototype.validate = function (c) {\n            return this.minlength == null ? null : this._validator(c);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = function () { return []; };\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var /** @type {?} */ MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     *  A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n      * `formControl`,\n      * or control with `ngModel` that also has a `maxlength` attribute.\n      * *\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.validate = function (c) {\n            return this.maxlength != null ? this._validator(c) : null;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = function () { return []; };\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var /** @type {?} */ PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     *  A Directive that adds the `pattern` validator to any controls marked with the\n      * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n      * as the regex to validate Control value against.  Follows pattern attribute\n      * semantics; i.e. regex must match entire Control value.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n      * ```\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = function () { return []; };\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     *  *\n      * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n      * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n      * forms.\n      * *\n      * *\n      * To use, inject `FormBuilder` into your component class. You can then call its methods\n      * directly.\n      * *\n      * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: {@link ReactiveFormsModule}\n      * *\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         *  Construct a new {@link FormGroup} with the given map of configuration.\n          * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n          * *\n          * See the {@link FormGroup} constructor for more details.\n         * @param {?} controlsConfig\n         * @param {?=} extra\n         * @return {?}\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n            var /** @type {?} */ validator = isPresent(extra) ? extra['validator'] : null;\n            var /** @type {?} */ asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         *  Construct a new {@link FormControl} with the given `formState`,`validator`, and\n          * `asyncValidator`.\n          * *\n          * `formState` can either be a standalone value for the form control or an object\n          * that contains both a value and a disabled status.\n          * *\n         * @param {?} formState\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         * @return {?}\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         *  Construct a {@link FormArray} from the given `controlsConfig` array of\n          * configuration, with the given optional `validator` and `asyncValidator`.\n         * @param {?} controlsConfig\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         * @return {?}\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /**\n         * @param {?} controlsConfig\n         * @return {?}\n         */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var /** @type {?} */ controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /**\n         * @param {?} controlConfig\n         * @return {?}\n         */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var /** @type {?} */ value = controlConfig[0];\n                var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = function () { return []; };\n        return FormBuilder;\n    }());\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.1');\n\n    var /** @type {?} */ SHARED_FORM_DIRECTIVES = [\n        NgSelectOption,\n        NgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n    ];\n    var /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     *  Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: SHARED_FORM_DIRECTIVES,\n                        exports: SHARED_FORM_DIRECTIVES,\n                    },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = function () { return []; };\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     *  The ng module for forms.\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = function () { return []; };\n        return FormsModule;\n    }());\n    /**\n     *  The ng module for reactive forms.\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = function () { return []; };\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.CheckboxRequiredValidator = CheckboxRequiredValidator;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.VERSION = VERSION;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 645:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar MyCircleDirective = (function () {\n    function MyCircleDirective(element) {\n        this.element = element;\n        this.background = \"white\";\n        this.strokeColor = 'black';\n        this.strokeWidth = 2;\n        this.strokeStyle = 'solid';\n        this.opacity = 1;\n    }\n    MyCircleDirective.prototype.ngOnChanges = function () {\n        this.element.nativeElement.style.borderRadius = \"50%\";\n        this.element.nativeElement.style.position = \"absolute\";\n        this.element.nativeElement.style.left = this.myCircle.x + \"px\";\n        this.element.nativeElement.style.top = this.myCircle.y + \"px\";\n        this.element.nativeElement.style.width = this.myCircle.radius * 2 + \"px\";\n        this.element.nativeElement.style.height = this.myCircle.radius * 2 + \"px\";\n        this.element.nativeElement.style.background = this.background;\n        this.element.nativeElement.style.borderColor = this.strokeColor;\n        this.element.nativeElement.style.borderWidth = this.strokeWidth + \"px\";\n        this.element.nativeElement.style.borderStyle = this.strokeStyle;\n        this.element.nativeElement.style.opacity = this.opacity;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', (typeof (_a = typeof geometry_1.Circle !== 'undefined' && geometry_1.Circle) === 'function' && _a) || Object)\n    ], MyCircleDirective.prototype, \"myCircle\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MyCircleDirective.prototype, \"background\", void 0);\n    __decorate([\n        core_1.Input('borderColor'), \n        __metadata('design:type', Object)\n    ], MyCircleDirective.prototype, \"strokeColor\", void 0);\n    __decorate([\n        core_1.Input('borderWidth'), \n        __metadata('design:type', Object)\n    ], MyCircleDirective.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        core_1.Input('borderStyle'), \n        __metadata('design:type', Object)\n    ], MyCircleDirective.prototype, \"strokeStyle\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MyCircleDirective.prototype, \"opacity\", void 0);\n    MyCircleDirective = __decorate([\n        core_1.Directive({\n            selector: '[myCircle]'\n        }),\n        __param(0, core_1.Inject(core_1.ElementRef)), \n        __metadata('design:paramtypes', [(typeof (_b = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _b) || Object])\n    ], MyCircleDirective);\n    return MyCircleDirective;\n    var _a, _b;\n}());\nexports.MyCircleDirective = MyCircleDirective;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2RpcmVjdGl2ZS9teS1jaXJjbGUuZGlyZWN0aXZlLnRzP2E4ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmLEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDaXJjbGUgfSBmcm9tICcuLi9tb2RlbC9nZW9tZXRyeSc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW215Q2lyY2xlXSdcbn0pXG5leHBvcnQgY2xhc3MgTXlDaXJjbGVEaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpIG15Q2lyY2xlOkNpcmNsZTtcblx0QElucHV0KCkgYmFja2dyb3VuZD1cIndoaXRlXCI7XG5cdEBJbnB1dCgnYm9yZGVyQ29sb3InKSBzdHJva2VDb2xvcj0nYmxhY2snO1xuXHRASW5wdXQoJ2JvcmRlcldpZHRoJykgc3Ryb2tlV2lkdGg9Mjtcblx0QElucHV0KCdib3JkZXJTdHlsZScpIHN0cm9rZVN0eWxlPSdzb2xpZCc7XG5cdEBJbnB1dCgpIG9wYWNpdHk9MTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmKSB7fVxuXHRcbiAgICBwcm90ZWN0ZWQgbmdPbkNoYW5nZXMoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLmJvcmRlclJhZGl1cz1cIjUwJVwiO1xuXG4gICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIjtcbiAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUubGVmdD10aGlzLm15Q2lyY2xlLngrXCJweFwiO1xuICAgICAgICB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS50b3A9dGhpcy5teUNpcmNsZS55K1wicHhcIjtcbiAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUud2lkdGg9dGhpcy5teUNpcmNsZS5yYWRpdXMqMitcInB4XCI7XG4gICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLmhlaWdodD10aGlzLm15Q2lyY2xlLnJhZGl1cyoyK1wicHhcIjtcblx0XHR0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kPXRoaXMuYmFja2dyb3VuZDtcblx0XHR0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5zdHlsZS5ib3JkZXJDb2xvcj10aGlzLnN0cm9rZUNvbG9yO1xuXHRcdHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLmJvcmRlcldpZHRoPXRoaXMuc3Ryb2tlV2lkdGgrXCJweFwiO1xuXHRcdHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLmJvcmRlclN0eWxlPXRoaXMuc3Ryb2tlU3R5bGU7XG5cdFx0dGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUub3BhY2l0eT10aGlzLm9wYWNpdHk7XG5cbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9jbGllbnQvZGlyZWN0aXZlL215LWNpcmNsZS5kaXJlY3RpdmUudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBS0E7QUFRQTtBQUFBO0FBTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUF2QkE7QUFBQTs7QUFBQTtBQUNBO0FBQUE7O0FBQUE7QUFDQTtBQUFBOztBQUFBO0FBQ0E7QUFBQTs7QUFBQTtBQUNBO0FBQUE7O0FBQUE7QUFDQTtBQUFBOztBQUFBO0FBVEE7QUFBQTtBQUNBO0FBQ0E7QUFTQTs7QUFUQTtBQTBCQTs7QUFBQTtBQXpCQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 646:
/***/ function(module, exports, __webpack_require__) {

	eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(647);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(88)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./workspace.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./workspace.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L3dvcmtzcGFjZS5zY3NzP2NjYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi93b3Jrc3BhY2Uuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi93b3Jrc3BhY2Uuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcyEuL3dvcmtzcGFjZS5zY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC93b3Jrc3BhY2Uuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNjQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 647:
/***/ function(module, exports, __webpack_require__) {

	eval("exports = module.exports = __webpack_require__(87)();\n// imports\n\n\n// module\nexports.push([module.id, \".generic-block {\\n  position: absolute;\\n  background: white;\\n  border: 2px solid black; }\\n\\n.handle-pick {\\n  position: absolute;\\n  border: none;\\n  background: #2BA3FC; }\\n\\nh1 {\\n  color: black;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 250%; }\\n\\n.center-anchored {\\n  position: absolute;\\n  transform-origin: center; }\\n\\n.line-segment {\\n  text-align: center;\\n  position: absolute;\\n  height: 1px;\\n  background: black;\\n  transform-origin: center; }\\n\\n#starter-tip {\\n  color: grey;\\n  position: absolute; }\\n\", \"\"]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L3dvcmtzcGFjZS5zY3NzPzRiYzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZ2VuZXJpYy1ibG9jayB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOyB9XFxuXFxuLmhhbmRsZS1waWNrIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJhY2tncm91bmQ6ICMyQkEzRkM7IH1cXG5cXG5oMSB7XFxuICBjb2xvcjogYmxhY2s7XFxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMjUwJTsgfVxcblxcbi5jZW50ZXItYW5jaG9yZWQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyOyB9XFxuXFxuLmxpbmUtc2VnbWVudCB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBoZWlnaHQ6IDFweDtcXG4gIGJhY2tncm91bmQ6IGJsYWNrO1xcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyOyB9XFxuXFxuI3N0YXJ0ZXItdGlwIHtcXG4gIGNvbG9yOiBncmV5O1xcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXIhLi9+L3Nhc3MtbG9hZGVyIS4vY2xpZW50L3dvcmtzcGFjZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSA2NDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 648:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(3);\nvar geometry_1 = __webpack_require__(66);\nvar LineSegmentComponent = (function () {\n    function LineSegmentComponent() {\n    }\n    LineSegmentComponent.prototype.rotation = function () {\n        var degree = this.start.angleOfSegment(this.end);\n        return \"rotate(\" + degree + \"deg)\";\n    };\n    __decorate([\n        core_1.Input('start'), \n        __metadata('design:type', (typeof (_a = typeof geometry_1.Point !== 'undefined' && geometry_1.Point) === 'function' && _a) || Object)\n    ], LineSegmentComponent.prototype, \"start\", void 0);\n    __decorate([\n        core_1.Input('end'), \n        __metadata('design:type', (typeof (_b = typeof geometry_1.Point !== 'undefined' && geometry_1.Point) === 'function' && _b) || Object)\n    ], LineSegmentComponent.prototype, \"end\", void 0);\n    LineSegmentComponent = __decorate([\n        core_1.Component({\n            selector: 'line-segment',\n            template: __webpack_require__(649),\n        }), \n        __metadata('design:paramtypes', [])\n    ], LineSegmentComponent);\n    return LineSegmentComponent;\n    var _a, _b;\n}());\nexports.LineSegmentComponent = LineSegmentComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2NvbXBvbmVudC9saW5lLXNlZ21lbnQuY29tcG9uZW50LnRzP2U2ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb2ludCB9IGZyb20gJy4uL21vZGVsL2dlb21ldHJ5JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGluZS1zZWdtZW50JyxcbiAgdGVtcGxhdGU6IHJlcXVpcmUoJy4uL3ZpZXcvbGluZS1zZWdtZW50LmNvbXBvbmVudC5odG1sJyksXG59KVxuZXhwb3J0IGNsYXNzIExpbmVTZWdtZW50Q29tcG9uZW50ICB7XG5cdEBJbnB1dCgnc3RhcnQnKSBzdGFydDpQb2ludDtcblx0QElucHV0KCdlbmQnKSBlbmQ6UG9pbnQ7XG5cblx0cHJpdmF0ZSByb3RhdGlvbigpe1xuXHRcdHZhciBkZWdyZWU9dGhpcy5zdGFydC5hbmdsZU9mU2VnbWVudCh0aGlzLmVuZCk7XG5cdFx0cmV0dXJuIFwicm90YXRlKFwiK2RlZ3JlZStcImRlZylcIjtcblx0fVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vY2xpZW50L2NvbXBvbmVudC9saW5lLXNlZ21lbnQuY29tcG9uZW50LnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQU1BO0FBQUE7QUFRQTtBQUpBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFBQTs7QUFBQTtBQUNBO0FBQUE7O0FBQUE7QUFOQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUFBO0FBU0E7O0FBQUE7QUFSQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 649:
/***/ function(module, exports) {

	eval("module.exports = \"<div \\n\\tclass=\\\"line-segment\\\" \\n\\t[style.left.px]=\\\"(start.x+end.x)/2\\\" \\n\\t[style.top.px]=\\\"(start.y+end.y)/2\\\"\\n\\t[style.width.px]=\\\"start.distance(end)\\\"\\n\\t[style.-webkit-transform]=\\\"rotation()\\\"\\n\\t[style.-ms-transform]=\\\"rotation()\\\"\\n\\t[style.transform]=\\\"rotation()\\\">\\n\\t<div class=\\\"line-segment-text\\\">something inside</div>\\n</div>\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L3ZpZXcvbGluZS1zZWdtZW50LmNvbXBvbmVudC5odG1sP2YxOWUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgXFxuXFx0Y2xhc3M9XFxcImxpbmUtc2VnbWVudFxcXCIgXFxuXFx0W3N0eWxlLmxlZnQucHhdPVxcXCIoc3RhcnQueCtlbmQueCkvMlxcXCIgXFxuXFx0W3N0eWxlLnRvcC5weF09XFxcIihzdGFydC55K2VuZC55KS8yXFxcIlxcblxcdFtzdHlsZS53aWR0aC5weF09XFxcInN0YXJ0LmRpc3RhbmNlKGVuZClcXFwiXFxuXFx0W3N0eWxlLi13ZWJraXQtdHJhbnNmb3JtXT1cXFwicm90YXRpb24oKVxcXCJcXG5cXHRbc3R5bGUuLW1zLXRyYW5zZm9ybV09XFxcInJvdGF0aW9uKClcXFwiXFxuXFx0W3N0eWxlLnRyYW5zZm9ybV09XFxcInJvdGF0aW9uKClcXFwiPlxcblxcdDxkaXYgY2xhc3M9XFxcImxpbmUtc2VnbWVudC10ZXh0XFxcIj5zb21ldGhpbmcgaW5zaWRlPC9kaXY+XFxuPC9kaXY+XCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jbGllbnQvdmlldy9saW5lLXNlZ21lbnQuY29tcG9uZW50Lmh0bWxcbi8vIG1vZHVsZSBpZCA9IDY0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }

});